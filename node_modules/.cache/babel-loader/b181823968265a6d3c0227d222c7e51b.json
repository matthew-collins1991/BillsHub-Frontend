{"ast":null,"code":"import _toConsumableArray from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/NewUtilityCard.jsx\";\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Datetime from \"react-datetime\"; // import DataListInput from 'react-datalist-input'\n// core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport deburr from 'lodash/deburr';\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport API from \"../../adapters/API\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport extendedFormsStyle from \"assets/jss/material-dashboard-pro-react/views/extendedFormsStyle.jsx\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"../../../src/assets/scss/material-dashboard-pro-react/plugins/_plugin-react-datetime.scss\";\nimport { paymentTypeArray, paymentFreqArray, BillRequirements, logoImageStyle, logoStyle } from \"./UtilitiesStrings.js\";\nimport { Link } from \"react-router-dom\";\nimport Downshift from 'downshift';\nvar suggestions = [{\n  value: 'apple'\n}, {\n  value: 'pear'\n}, {\n  value: 'orange'\n}, {\n  value: 'grape'\n}, {\n  value: 'banana'\n}];\n\nfunction renderInput(inputProps) {\n  var InputProps = inputProps.InputProps,\n      classes = inputProps.classes,\n      ref = inputProps.ref,\n      other = _objectWithoutProperties(inputProps, [\"InputProps\", \"classes\", \"ref\"]);\n\n  return React.createElement(TextField, Object.assign({\n    InputProps: _objectSpread({\n      inputRef: ref,\n      classes: {\n        root: classes.inputRoot,\n        input: classes.inputInput\n      }\n    }, InputProps)\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }));\n}\n\nfunction renderSuggestion(_ref) {\n  var suggestion = _ref.suggestion,\n      index = _ref.index,\n      itemProps = _ref.itemProps,\n      highlightedIndex = _ref.highlightedIndex,\n      selectedItem = _ref.selectedItem;\n  var isHighlighted = highlightedIndex === index;\n  var isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n  return React.createElement(MenuItem, Object.assign({}, itemProps, {\n    key: suggestion.label,\n    selected: isHighlighted,\n    component: \"div\",\n    style: {\n      fontWeight: isSelected ? 500 : 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), suggestion.label);\n}\n\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({\n    label: PropTypes.string\n  }).isRequired\n};\n\nfunction getSuggestions(value) {\n  var inputValue = deburr(value.trim()).toLowerCase();\n  var inputLength = inputValue.length;\n  var count = 0;\n  return inputLength === 0 ? [] : suggestions.filter(function (suggestion) {\n    var keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n    if (keep) {\n      count += 1;\n    }\n\n    return keep;\n  });\n}\n\nvar NewUtilityCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NewUtilityCard, _React$Component);\n\n  function NewUtilityCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewUtilityCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewUtilityCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      companyName: \"\",\n      utilityType: \"\",\n      startDate: \"\",\n      renewalDate: \"\",\n      location: \"\",\n      age: \"\",\n      houseSize: \"\",\n      cost: \"\",\n      paymentType: \"\",\n      paymentFreq: \"\",\n      billDate: \"\",\n      companyUrl: \"\",\n      companyLogo: \"/image_placeholder.jpg\",\n      showLocation: false,\n      showAge: false,\n      showHouseSize: false,\n      inputValue: '',\n      selectedItem: []\n    };\n\n    _this.handleKeyDown = function (event) {\n      var _this$state = _this.state,\n          inputValue = _this$state.inputValue,\n          selectedItem = _this$state.selectedItem;\n\n      if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n        _this.setState({\n          selectedItem: selectedItem.slice(0, selectedItem.length - 1)\n        });\n      }\n    };\n\n    _this.handleSubmitClick = function () {\n      var _this$state2 = _this.state,\n          companyName = _this$state2.companyName,\n          utilityType = _this$state2.utilityType,\n          startDate = _this$state2.startDate,\n          renewalDate = _this$state2.renewalDate,\n          location = _this$state2.location,\n          age = _this$state2.age,\n          houseSize = _this$state2.houseSize,\n          cost = _this$state2.cost,\n          paymentType = _this$state2.paymentType,\n          paymentFreq = _this$state2.paymentFreq,\n          billDate = _this$state2.billDate,\n          companyUrl = _this$state2.companyUrl,\n          companyLogo = _this$state2.companyLogo;\n      var user = {\n        id: _this.props.userInfo.id,\n        name: _this.props.userInfo.name,\n        email: _this.props.userInfo.email,\n        location: location,\n        age: age,\n        houseSize: houseSize\n      };\n\n      _this.props.updateUserDetails(user);\n\n      var utility = {\n        user_id: _this.props.userInfo.id,\n        utility_type: utilityType,\n        start_date: startDate,\n        renewal_date: renewalDate,\n        payment_type: paymentType,\n        paymentFreq: paymentFreq,\n        active: true,\n        name: companyName,\n        url: companyUrl,\n        logo: companyLogo,\n        cost: cost,\n        bill_date: billDate\n      };\n      var localUtility = {\n        id: _this.findLastUtilityId(),\n        company_id: _this.findLastCompanyId(),\n        user_id: _this.props.userInfo.id,\n        utility_type: utilityType,\n        start_date: startDate,\n        renewal_date: renewalDate,\n        payment_type: paymentType,\n        paymentFreq: paymentFreq,\n        active: true,\n        bills: [{\n          cost: cost,\n          bill_date: billDate\n        }]\n      };\n      var localCompany = {\n        id: _this.findLastCompanyId(),\n        name: companyName,\n        url: companyUrl,\n        logo: companyLogo\n      };\n\n      _this.props.addCompanyLocal(localCompany);\n\n      _this.props.addUtilityLocal(localUtility);\n\n      API.updateUserInBill(user).then(function (data) {\n        if (data.error) {\n          alert(\"something is wrong!\");\n        }\n      });\n      API.createUtility(utility).then(function (data) {\n        if (data.error) {\n          alert(\"something is wrong!\");\n        } else {\n          alert(\"Utility Created!\");\n        }\n      });\n    };\n\n    _this.findLastUtilityId = function () {\n      return _this.props.userInfo.utilities.slice(-1)[0].id + 1;\n    };\n\n    _this.findLastCompanyId = function () {\n      return _this.props.companyData.slice(-1)[0].id + 1;\n    };\n\n    _this.handleCancelClick = function () {\n      return console.log(_this.props.userInfo);\n    };\n\n    _this.handleChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleCompanyChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      API.findLogo(event.target.value).then(function (logo) {\n        logo.length > 0 ? _this.setState({\n          companyUrl: logo[0].domain,\n          companyLogo: logo[0].logo\n        }) : _this.setState({\n          companyUrl: \"\",\n          companyLogo: \"/image_placeholder.jpg\"\n        });\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    _this.handleDelete = function (item) {\n      return function () {\n        _this.setState(function (state) {\n          var selectedItem = _toConsumableArray(state.selectedItem);\n\n          selectedItem.splice(selectedItem.indexOf(item), 1);\n          return {\n            selectedItem: selectedItem\n          };\n        });\n      };\n    };\n\n    _this.handleUtilityChange = function (event) {\n      var fullBill = [];\n      fullBill = BillRequirements.find(function (type) {\n        return type[0] === event.target.value;\n      });\n\n      _this.setState({\n        utilityType: event.target.value,\n        showLocation: fullBill[2],\n        showAge: fullBill[3],\n        showHouseSize: fullBill[1]\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewUtilityCard, [{\n    key: \"handleStartDate\",\n    value: function handleStartDate(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"handleRenewalDate\",\n    value: function handleRenewalDate(date) {\n      this.setState({\n        renewalDate: date\n      });\n    }\n  }, {\n    key: \"handleFirstDate\",\n    value: function handleFirstDate(date) {\n      this.setState({\n        billDate: date\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var userInfo = this.props.userInfo;\n      this.setState({\n        location: userInfo.location,\n        age: userInfo.age,\n        houseSize: userInfo.house_size\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      var _this$state3 = this.state,\n          showHouseSize = _this$state3.showHouseSize,\n          showAge = _this$state3.showAge,\n          showLocation = _this$state3.showLocation;\n      var _this$state4 = this.state,\n          inputValue = _this$state4.inputValue,\n          selectedItem = _this$state4.selectedItem;\n      var handleChange = this.handleChange,\n          handleCompanyChange = this.handleCompanyChange;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: false,\n        sm: 1,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(GridItem, {\n        xs: 12,\n        sm: 10,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, \"New Bill\"), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Fill out the bill details below:\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Downshift, {\n        id: \"downshift-multiple\",\n        inputValue: inputValue,\n        onChange: this.handleChange,\n        selectedItem: selectedItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, function (_ref2) {\n        var getInputProps = _ref2.getInputProps,\n            getItemProps = _ref2.getItemProps,\n            isOpen = _ref2.isOpen,\n            inputValue2 = _ref2.inputValue,\n            selectedItem2 = _ref2.selectedItem,\n            highlightedIndex = _ref2.highlightedIndex;\n        return React.createElement(\"div\", {\n          className: classes.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, renderInput({\n          fullWidth: true,\n          classes: classes,\n          InputProps: getInputProps({\n            startAdornment: selectedItem.map(function (item) {\n              return React.createElement(Chip, {\n                key: item,\n                tabIndex: -1,\n                label: item,\n                className: classes.chip,\n                onDelete: _this2.handleDelete(item),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 321\n                },\n                __self: this\n              });\n            }),\n            onChange: _this2.handleInputChange,\n            onKeyDown: _this2.handleKeyDown,\n            placeholder: 'Select multiple countries'\n          }),\n          label: 'Label'\n        }), isOpen ? React.createElement(Paper, {\n          className: classes.paper,\n          square: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          },\n          __self: this\n        }, getSuggestions(inputValue2).map(function (suggestion, index) {\n          return renderSuggestion({\n            suggestion: suggestion,\n            index: index,\n            itemProps: getItemProps({\n              item: suggestion.label\n            }),\n            highlightedIndex: highlightedIndex,\n            selectedItem: selectedItem2\n          });\n        })) : null);\n      }), React.createElement(CustomInput, {\n        labelText: \"Company Name\",\n        id: \"company-name\",\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        classes: {\n          select: classes.select\n        },\n        inputProps: {\n          name: \"companyName\",\n          onChange: handleCompanyChange,\n          type: 'datalist'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: \"Company URL\",\n        id: \"company-url\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          value: this.state.companyUrl,\n          disabled: true,\n          name: \"companyUrl\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fileinput text-center\",\n        style: logoStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"thumbnail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.companyLogo,\n        alt: \"...\",\n        style: logoImageStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.selectFormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"simple-select\",\n        className: classes.selectLabel,\n        style: {\n          color: \"#495057\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, \"Utility Type\"), React.createElement(Select, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        classes: {\n          select: classes.select\n        },\n        value: this.state.utilityType,\n        onChange: this.handleUtilityChange,\n        inputProps: {\n          name: \"utilityType\",\n          id: \"simple-select\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: true,\n        classes: {\n          root: classes.selectMenuItem\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"Utility Type\"), BillRequirements.map(function (utility) {\n        return React.createElement(MenuItem, {\n          classes: {\n            root: classes.selectMenuItem,\n            selected: classes.selectMenuItemSelected\n          },\n          value: utility[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, utility[0]);\n      })))), showHouseSize ? React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: \"Number of Bedrooms\",\n        id: \"company-namehouse-size\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          defaultValue: this.state.houseSize,\n          type: 'number',\n          name: \"houseSize\",\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      })) : null, showLocation ? React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: \"Location\",\n        id: \"company-name\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          defaultValue: this.state.location,\n          name: \"location\",\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      })) : null, showAge ? React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: \"Age\",\n        id: \"age\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          defaultValue: this.state.age,\n          type: \"number\",\n          name: \"age\",\n          min: 0,\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      })) : null), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501\n        },\n        __self: this\n      }, React.createElement(Datetime, {\n        onChange: function onChange(date) {\n          return _this2.handleStartDate(date);\n        },\n        timeFormat: false,\n        inputProps: {\n          placeholder: \"Start Date\",\n          name: \"startDate\",\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514\n        },\n        __self: this\n      }, React.createElement(Datetime, {\n        onChange: function onChange(date) {\n          return _this2.handleRenewalDate(date);\n        },\n        timeFormat: false,\n        inputProps: {\n          placeholder: \"Renewal Date\",\n          name: \"renewalDate\",\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515\n        },\n        __self: this\n      }))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }, React.createElement(Datetime, {\n        onChange: function onChange(date) {\n          return _this2.handleFirstDate(date);\n        },\n        timeFormat: false,\n        inputProps: {\n          placeholder: \"First Payment Date\",\n          name: \"billDate\",\n          onChange: handleChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      })))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        labelText: \"Cost\",\n        id: \"cost\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          name: \"cost\",\n          onChange: handleChange,\n          type: \"number\",\n          step: \"0.01\",\n          min: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.selectFormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"simple-select\",\n        className: classes.selectLabel,\n        style: {\n          color: \"#495057\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, \"Payment Type\"), React.createElement(Select, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        classes: {\n          select: classes.select\n        },\n        value: this.state.paymentType,\n        onChange: this.handleChange,\n        inputProps: {\n          name: \"paymentType\",\n          id: \"simple-select\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: true,\n        classes: {\n          root: classes.selectMenuItem\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, \"Payment Type\"), paymentTypeArray.map(function (payment) {\n        return React.createElement(MenuItem, {\n          classes: {\n            root: classes.selectMenuItem,\n            selected: classes.selectMenuItemSelected\n          },\n          value: payment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592\n          },\n          __self: this\n        }, payment);\n      })))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        fullWidth: true,\n        className: classes.selectFormControl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"simple-select\",\n        className: classes.selectLabel,\n        style: {\n          color: \"#495057\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }, \"Payment Frequency\"), React.createElement(Select, {\n        MenuProps: {\n          className: classes.selectMenu\n        },\n        classes: {\n          select: classes.select\n        },\n        value: this.state.paymentFreq,\n        onChange: this.handleChange,\n        inputProps: {\n          name: \"paymentFreq\",\n          id: \"simple-select\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        disabled: true,\n        classes: {\n          root: classes.selectMenuItem\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, \"Payment Frequency\"), paymentFreqArray.map(function (time) {\n        return React.createElement(MenuItem, {\n          classes: {\n            root: classes.selectMenuItem,\n            selected: classes.selectMenuItemSelected\n          },\n          value: time,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640\n          },\n          __self: this\n        }, time);\n      })))))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        style: {\n          display: \"contents\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/admin/utilities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleSubmitClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 658\n        },\n        __self: this\n      }, \"Submit New Bill\")), React.createElement(Link, {\n        to: \"/admin/utilities\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"info\",\n        onClick: this.handleCancelClick,\n        style: {\n          float: \"right\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 663\n        },\n        __self: this\n      }, \"Back\")))))), React.createElement(GridItem, {\n        xs: false,\n        sm: 1,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewUtilityCard;\n}(React.Component);\n\nexport default withStyles(extendedFormsStyle)(NewUtilityCard);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/NewUtilityCard.jsx"],"names":["React","withStyles","Datetime","GridItem","PropTypes","TextField","Popper","Paper","Chip","deburr","GridContainer","CustomInput","Button","Card","CardHeader","CardBody","CardFooter","API","InputLabel","extendedFormsStyle","FormControl","Select","MenuItem","paymentTypeArray","paymentFreqArray","BillRequirements","logoImageStyle","logoStyle","Link","Downshift","suggestions","value","renderInput","inputProps","InputProps","classes","ref","other","inputRef","root","inputRoot","input","inputInput","renderSuggestion","suggestion","index","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","indexOf","label","fontWeight","propTypes","number","object","string","shape","isRequired","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","count","filter","keep","slice","NewUtilityCard","state","companyName","utilityType","startDate","renewalDate","location","age","houseSize","cost","paymentType","paymentFreq","billDate","companyUrl","companyLogo","showLocation","showAge","showHouseSize","handleKeyDown","event","key","setState","handleSubmitClick","user","id","props","userInfo","name","email","updateUserDetails","utility","user_id","utility_type","start_date","renewal_date","payment_type","active","url","logo","bill_date","localUtility","findLastUtilityId","company_id","findLastCompanyId","bills","localCompany","addCompanyLocal","addUtilityLocal","updateUserInBill","then","data","error","alert","createUtility","utilities","companyData","handleCancelClick","console","log","handleChange","target","handleCompanyChange","findLogo","domain","handleInputChange","handleDelete","item","splice","handleUtilityChange","fullBill","find","type","date","house_size","cardTitleWhite","cardCategoryWhite","getInputProps","getItemProps","isOpen","inputValue2","selectedItem2","container","fullWidth","startAdornment","map","chip","onChange","onKeyDown","placeholder","paper","className","selectMenu","select","disabled","selectFormControl","selectLabel","color","selectMenuItem","selected","selectMenuItemSelected","defaultValue","min","handleStartDate","handleRenewalDate","handleFirstDate","step","payment","time","display","float","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Datetime from \"react-datetime\";\n// import DataListInput from 'react-datalist-input'\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport deburr from 'lodash/deburr';\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport API from \"../../adapters/API\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport extendedFormsStyle from \"assets/jss/material-dashboard-pro-react/views/extendedFormsStyle.jsx\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport \"../../../src/assets/scss/material-dashboard-pro-react/plugins/_plugin-react-datetime.scss\";\nimport {\n  paymentTypeArray,\n  paymentFreqArray,\n  BillRequirements,\n  logoImageStyle,\n  logoStyle\n} from \"./UtilitiesStrings.js\";\nimport { Link } from \"react-router-dom\";\nimport Downshift from 'downshift'\n\nconst suggestions = [\n  {value: 'apple'},\n  {value: 'pear'},\n  {value: 'orange'},\n  {value: 'grape'},\n  {value: 'banana'},\n]\n\nfunction renderInput(inputProps) {\n  const { InputProps, classes, ref, ...other } = inputProps;\n\n  return (\n    <TextField\n      InputProps={{\n        inputRef: ref,\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput,\n        },\n        ...InputProps,\n      }}\n      {...other}\n    />\n  );\n}\n\nfunction renderSuggestion({ suggestion, index, itemProps, highlightedIndex, selectedItem }) {\n  const isHighlighted = highlightedIndex === index;\n  const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\n\n  return (\n    <MenuItem\n      {...itemProps}\n      key={suggestion.label}\n      selected={isHighlighted}\n      component=\"div\"\n      style={{\n        fontWeight: isSelected ? 500 : 400,\n      }}\n    >\n      {suggestion.label}\n    </MenuItem>\n  );\n}\nrenderSuggestion.propTypes = {\n  highlightedIndex: PropTypes.number,\n  index: PropTypes.number,\n  itemProps: PropTypes.object,\n  selectedItem: PropTypes.string,\n  suggestion: PropTypes.shape({ label: PropTypes.string }).isRequired,\n};\n\nfunction getSuggestions(value) {\n  const inputValue = deburr(value.trim()).toLowerCase();\n  const inputLength = inputValue.length;\n  let count = 0;\n\n  return inputLength === 0\n    ? []\n    : suggestions.filter(suggestion => {\n        const keep =\n          count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n        if (keep) {\n          count += 1;\n        }\n\n        return keep;\n      });\n}\n\nclass NewUtilityCard extends React.Component {\n  state = {\n    companyName: \"\",\n    utilityType: \"\",\n    startDate: \"\",\n    renewalDate: \"\",\n    location: \"\",\n    age: \"\",\n    houseSize: \"\",\n    cost: \"\",\n    paymentType: \"\",\n    paymentFreq: \"\",\n    billDate: \"\",\n    companyUrl: \"\",\n    companyLogo: \"/image_placeholder.jpg\",\n    showLocation: false,\n    showAge: false,\n    showHouseSize: false,\n    inputValue: '',\n    selectedItem: []\n  };\n\n  handleStartDate(date) {\n    this.setState({ startDate: date });\n  }\n\n  handleRenewalDate(date) {\n    this.setState({ renewalDate: date });\n  }\n\n  handleFirstDate(date) {\n    this.setState({ billDate: date });\n  }\n\n  componentWillMount() {\n    const { userInfo } = this.props;\n    this.setState({\n      location: userInfo.location,\n      age: userInfo.age,\n      houseSize: userInfo.house_size\n    });\n  }\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItem } = this.state;\n    if (selectedItem.length && !inputValue.length && event.key === 'Backspace') {\n      this.setState({\n        selectedItem: selectedItem.slice(0, selectedItem.length - 1),\n      });\n    }\n  };\n\n\n  handleSubmitClick = () => {\n\n    const { companyName, utilityType,startDate,renewalDate,location,age,houseSize,cost,paymentType,paymentFreq,billDate,companyUrl,companyLogo } = this.state;\n    const user = {\n      id: this.props.userInfo.id,\n      name: this.props.userInfo.name,\n      email: this.props.userInfo.email,\n      location: location,\n      age: age,\n      houseSize: houseSize\n    };\n    this.props.updateUserDetails(user)\n    const utility = {\n    user_id: this.props.userInfo.id,\n    utility_type: utilityType,\n    start_date: startDate,\n    renewal_date: renewalDate,\n    payment_type: paymentType,\n    paymentFreq: paymentFreq,\n    active: true,\n    name: companyName,\n    url: companyUrl,\n    logo: companyLogo,\n    cost: cost,\n    bill_date: billDate\n    }\n    const localUtility = {\n    id: this.findLastUtilityId(),\n    company_id: this.findLastCompanyId(),\n    user_id: this.props.userInfo.id,\n    utility_type: utilityType,\n    start_date: startDate,\n    renewal_date: renewalDate,\n    payment_type: paymentType,\n    paymentFreq: paymentFreq,\n    active: true,\n    bills: [{\n      cost: cost,\n      bill_date: billDate\n    }]\n    }\n    const localCompany = {\n      id: this.findLastCompanyId(),\n      name: companyName,\n      url: companyUrl,\n      logo: companyLogo,\n      }\n    this.props.addCompanyLocal(localCompany)\n    this.props.addUtilityLocal(localUtility)\n    API.updateUserInBill(user).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } \n    });\n    API.createUtility(utility).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } else {\n        alert(\"Utility Created!\")\n      }\n    });\n  };\n\n  findLastUtilityId = () => {\n    return this.props.userInfo.utilities.slice(-1)[0].id+1\n  }\n\n  findLastCompanyId = () => {\n    return this.props.companyData.slice(-1)[0].id+1\n  }\n\n  handleCancelClick = () => console.log(this.props.userInfo)\n\n  handleChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  handleCompanyChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n    API.findLogo(event.target.value).then(logo => {\n      logo.length > 0\n        ? this.setState({\n            companyUrl: logo[0].domain,\n            companyLogo: logo[0].logo\n          })\n        : this.setState({\n            companyUrl: \"\",\n            companyLogo: \"/image_placeholder.jpg\"\n          });\n    });\n  };\n\n  handleInputChange = event => {\n    this.setState({ inputValue: event.target.value });\n  };\n\n  handleDelete = item => () => {\n    this.setState(state => {\n      const selectedItem = [...state.selectedItem];\n      selectedItem.splice(selectedItem.indexOf(item), 1);\n      return { selectedItem };\n    });\n  };\n\n\n  handleUtilityChange = event => {\n    let fullBill=[]\n    fullBill = BillRequirements.find(type => type[0] === event.target.value)\n    this.setState({ \n      utilityType: event.target.value,\n      showLocation: fullBill[2],\n      showAge: fullBill[3],\n      showHouseSize: fullBill[1]\n    });\n  };\n\n\n  render() {\n    const { classes } = this.props;\n    const { showHouseSize, showAge, showLocation } = this.state;\n    const { inputValue, selectedItem } = this.state;\n    const { handleChange, handleCompanyChange } = this;\n\n    return (\n      <div>\n        <GridContainer>\n          {/* grid item to add padding to user form */}\n          <GridItem xs={false} sm={1} md={2} />\n          <GridItem xs={12} sm={10} md={8}>\n            <Card>\n              <CardHeader color=\"primary\">\n                <h4 className={classes.cardTitleWhite}>New Bill</h4>\n                <p className={classes.cardCategoryWhite}>\n                  Fill out the bill details below:\n                </p>\n              </CardHeader>\n              <CardBody>\n                <GridContainer>\n                  <GridItem xs={12} sm={4} md={4}>\n                  <Downshift\n        id=\"downshift-multiple\"\n        inputValue={inputValue}\n        onChange={this.handleChange}\n        selectedItem={selectedItem}\n      >\n        {({\n          getInputProps,\n          getItemProps,\n          isOpen,\n          inputValue: inputValue2,\n          selectedItem: selectedItem2,\n          highlightedIndex,\n        }) => (\n          <div className={classes.container}>\n            {renderInput({\n              fullWidth: true,\n              classes,\n              InputProps: getInputProps({\n                startAdornment: selectedItem.map(item => (\n                  <Chip\n                    key={item}\n                    tabIndex={-1}\n                    label={item}\n                    className={classes.chip}\n                    onDelete={this.handleDelete(item)}\n                  />\n                )),\n                onChange: this.handleInputChange,\n                onKeyDown: this.handleKeyDown,\n                placeholder: 'Select multiple countries',\n              }),\n              label: 'Label',\n            })}\n            {isOpen ? (\n              <Paper className={classes.paper} square>\n                {getSuggestions(inputValue2).map((suggestion, index) =>\n                  renderSuggestion({\n                    suggestion,\n                    index,\n                    itemProps: getItemProps({ item: suggestion.label }),\n                    highlightedIndex,\n                    selectedItem: selectedItem2,\n                  }),\n                )}\n              </Paper>\n            ) : null}\n          </div>\n        )}\n      </Downshift>\n                    <CustomInput\n                      labelText=\"Company Name\"\n                      id=\"company-name\"\n                      MenuProps={{\n                        className: classes.selectMenu\n                      }}\n                      classes={{\n                        select: classes.select\n                      }}\n                      inputProps={{\n                        name: \"companyName\",\n                        onChange: handleCompanyChange,\n                        type: 'datalist'\n                      }}\n                    >\n                    \n                        </CustomInput>\n                  </GridItem>\n                  <GridItem xs={12} sm={4} md={4}>\n                    <CustomInput\n                      labelText=\"Company URL\"\n                      id=\"company-url\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        value: this.state.companyUrl,\n                        disabled: true,\n                        name: \"companyUrl\"\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={4} md={4}>\n                    <div className=\"fileinput text-center\" style={logoStyle}>\n                      <div className=\"thumbnail\">\n                        <img\n                          src={this.state.companyLogo}\n                          alt=\"...\"\n                          style={logoImageStyle}\n                        />\n                      </div>\n                    </div>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl\n                      fullWidth\n                      className={classes.selectFormControl}\n                    >\n                      <InputLabel\n                        htmlFor=\"simple-select\"\n                        className={classes.selectLabel}\n                        style={{ color: \"#495057\" }}\n                      >\n                        Utility Type\n                      </InputLabel>\n                      <Select\n                        MenuProps={{\n                          className: classes.selectMenu\n                        }}\n                        classes={{\n                          select: classes.select\n                        }}\n                        value={this.state.utilityType}\n                        onChange={this.handleUtilityChange}\n                        inputProps={{\n                          name: \"utilityType\",\n                          id: \"simple-select\"\n                        }}\n                      >\n                        <MenuItem\n                          disabled\n                          classes={{\n                            root: classes.selectMenuItem\n                          }}\n                        >\n                          Utility Type\n                        </MenuItem>\n                        {BillRequirements.map(utility => (\n                          <MenuItem\n                            classes={{\n                              root: classes.selectMenuItem,\n                              selected: classes.selectMenuItemSelected\n                            }}\n                            value={utility[0]}\n                          >\n                            {utility[0]}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </GridItem>\n                  {\n                  showHouseSize ?\n                     <GridItem xs={12} sm={4} md={4}>\n                    <CustomInput\n                      labelText=\"Number of Bedrooms\"\n                      id=\"company-namehouse-size\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        defaultValue: this.state.houseSize,\n                        type: 'number',\n                        name: \"houseSize\",\n                        onChange: handleChange\n                      }}\n                    />\n                  </GridItem>\n                  : null}\n                      {\n                  showLocation ?\n                     <GridItem xs={12} sm={4} md={4}>\n                    <CustomInput\n                      labelText=\"Location\"\n                      id=\"company-name\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        defaultValue: this.state.location,\n                        name: \"location\",\n                        onChange: handleChange\n                      }}\n                    />\n                  </GridItem>\n                  : null}\n                      {\n                  showAge ?\n                     <GridItem xs={12} sm={4} md={4}>\n                    <CustomInput\n                      labelText=\"Age\"\n                      id=\"age\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        defaultValue: this.state.age,\n                        type: \"number\",\n                        name: \"age\",\n                        min: 0,\n                        onChange: handleChange\n                      }}\n                    />\n                  </GridItem>\n                  : null}\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl fullWidth>\n                      <Datetime\n                        onChange={date => this.handleStartDate(date)}\n                        timeFormat={false}\n                        inputProps={{\n                          placeholder: \"Start Date\",\n                          name: \"startDate\",\n                          onChange: handleChange\n                        }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl fullWidth>\n                      <Datetime\n                        onChange={date => this.handleRenewalDate(date)}\n                        timeFormat={false}\n                        inputProps={{\n                          placeholder: \"Renewal Date\",\n                          name: \"renewalDate\",\n                          onChange: handleChange\n                        }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl fullWidth>\n                      <Datetime\n                        onChange={date => this.handleFirstDate(date)}\n                        timeFormat={false}\n                        inputProps={{\n                          placeholder: \"First Payment Date\",\n                          name: \"billDate\",\n                          onChange: handleChange\n                        }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <CustomInput\n                      labelText=\"Cost\"\n                      id=\"cost\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        name: \"cost\",\n                        onChange: handleChange,\n                        type: \"number\",\n                        step: \"0.01\",\n                        min: 0\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl\n                      fullWidth\n                      className={classes.selectFormControl}\n                    >\n                      <InputLabel\n                        htmlFor=\"simple-select\"\n                        className={classes.selectLabel}\n                        style={{ color: \"#495057\" }}\n                      >\n                        Payment Type\n                      </InputLabel>\n                      <Select\n                        MenuProps={{\n                          className: classes.selectMenu\n                        }}\n                        classes={{\n                          select: classes.select\n                        }}\n                        value={this.state.paymentType}\n                        onChange={this.handleChange}\n                        inputProps={{\n                          name: \"paymentType\",\n                          id: \"simple-select\"\n                        }}\n                      >\n                        <MenuItem\n                          disabled\n                          classes={{\n                            root: classes.selectMenuItem\n                          }}\n                        >\n                          Payment Type\n                        </MenuItem>\n                        {paymentTypeArray.map(payment => (\n                          <MenuItem\n                            classes={{\n                              root: classes.selectMenuItem,\n                              selected: classes.selectMenuItemSelected\n                            }}\n                            value={payment}\n                          >\n                            {payment}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={4}>\n                    <FormControl\n                      fullWidth\n                      className={classes.selectFormControl}\n                    >\n                      <InputLabel\n                        htmlFor=\"simple-select\"\n                        className={classes.selectLabel}\n                        style={{ color: \"#495057\" }}\n                      >\n                        Payment Frequency\n                      </InputLabel>\n                      <Select\n                        MenuProps={{\n                          className: classes.selectMenu\n                        }}\n                        classes={{\n                          select: classes.select\n                        }}\n                        value={this.state.paymentFreq}\n                        onChange={this.handleChange}\n                        inputProps={{\n                          name: \"paymentFreq\",\n                          id: \"simple-select\"\n                        }}\n                      >\n                        <MenuItem\n                          disabled\n                          classes={{\n                            root: classes.selectMenuItem\n                          }}\n                        >\n                          Payment Frequency\n                        </MenuItem>\n                        {paymentFreqArray.map(time => (\n                          <MenuItem\n                            classes={{\n                              root: classes.selectMenuItem,\n                              selected: classes.selectMenuItemSelected\n                            }}\n                            value={time}\n                          >\n                            {time}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n                  </GridItem>\n                </GridContainer>\n              </CardBody>\n              <CardFooter>\n                <GridItem style={{ display: \"contents\" }}>\n                <Link to=\"/admin/utilities\">\n                  <Button color=\"primary\" onClick={this.handleSubmitClick}>\n                    Submit New Bill\n                  </Button>\n                  </Link>\n                  <Link to=\"/admin/utilities\">\n                    <Button\n                      color=\"info\"\n                      onClick={this.handleCancelClick}\n                      style={{ float: \"right\" }}\n                    >\n                      Back\n                    </Button>\n                  </Link>\n                </GridItem>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          {/* grid item to add padding to user form */}\n          <GridItem xs={false} sm={1} md={2} />\n        </GridContainer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(extendedFormsStyle)(NewUtilityCard);\n"]},"metadata":{},"sourceType":"module"}