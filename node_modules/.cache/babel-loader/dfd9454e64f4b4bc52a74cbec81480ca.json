{"ast":null,"code":"import _toConsumableArray from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Notifications/NotificationContainer.jsx\";\n\n/* eslint-disable */\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // @material-ui/icons\n\nimport AddAlert from \"@material-ui/icons/AddAlert\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.jsx\";\nimport Snackbar from \"components/Snackbar/Snackbar.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport { returnSeries, GetMonthBillCostsAndLabels, GetYearBillCostsAndLabels, GetNextMonthBillCostsAndLabels, getTimeToNextBill } from '../../variables/DateSort';\nvar styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nvar NotificationContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NotificationContainer, _React$Component);\n\n  function NotificationContainer(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NotificationContainer).call(this, props));\n\n    _this.findCompany = function (utility) {\n      var company = _this.props.companyData.find(function (company) {\n        return company.id === utility.company_id;\n      });\n\n      return company;\n    };\n\n    _this.allBillsArray = function () {\n      var allBills = [];\n      _this.props.userInfo.utilities && _this.props.userInfo.utilities.map(function (utility) {\n        return utility.bills.map(function (bill) {\n          bill.utility = utility;\n          return allBills = [].concat(_toConsumableArray(allBills), [bill]);\n        });\n      });\n      console.log(allBills);\n      return allBills;\n    };\n\n    _this.allUtilitiesArray = function () {\n      var allUtilities = [];\n      _this.props.userInfo.utilities && _this.props.userInfo.utilities.map(function (utility) {\n        return allUtilities = [].concat(_toConsumableArray(allUtilities), [utility]);\n      });\n      return allUtilities;\n    };\n\n    _this.findBillsOverNextWeek = function (bills) {\n      var arr = [];\n      bills.map(function (bill) {\n        if (getTimeToNextBill(bill.bill_date) > 0 && getTimeToNextBill(bill.bill_date) < 8) {\n          arr = [].concat(_toConsumableArray(arr), [bill]);\n        }\n      });\n      console.log(arr);\n      return 'hello';\n    };\n\n    _this.state = {\n      tl: false,\n      tc: false,\n      tr: false,\n      bl: false,\n      bc: false,\n      br: false\n    };\n    return _this;\n  } // to stop the warning of calling setState of unmounted component\n\n\n  _createClass(NotificationContainer, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = window.setTimeout(null, 0);\n\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    }\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(place) {\n      var x = [];\n      x[place] = true;\n      this.setState(x);\n      this.alertTimeout = setTimeout(function () {\n        x[place] = false;\n        this.setState(x);\n      }.bind(this), 6000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Bill Notifications\"), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Below are your upcoming bills in the next week \", this.findBillsOverNextWeek(this.allBillsArray()))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, {\n        message: \"This is a plain notification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a notification with close button.\",\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a notification with close button and icon.\",\n        close: true,\n        icon: AddAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\",\n        close: true,\n        icon: AddAlert,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitleWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Contract Notifications\"), React.createElement(\"p\", {\n        className: classes.cardCategoryWhite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Below are any upcoming contract renewals\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(SnackbarContent, {\n        message: 'INFO - This is a regular notification made with color=\"info\"',\n        close: true,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'SUCCESS - This is a regular notification made with color=\"success\"',\n        close: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'WARNING - This is a regular notification made with color=\"warning\"',\n        close: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'DANGER - This is a regular notification made with color=\"danger\"',\n        close: true,\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'PRIMARY - This is a regular notification made with color=\"primary\"',\n        close: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return NotificationContainer;\n}(React.Component);\n\nexport default withStyles(styles)(NotificationContainer);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Notifications/NotificationContainer.jsx"],"names":["React","withStyles","AddAlert","GridItem","GridContainer","Button","SnackbarContent","Snackbar","Card","CardHeader","CardBody","returnSeries","GetMonthBillCostsAndLabels","GetYearBillCostsAndLabels","GetNextMonthBillCostsAndLabels","getTimeToNextBill","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","lineHeight","NotificationContainer","props","findCompany","utility","company","companyData","find","id","company_id","allBillsArray","allBills","userInfo","utilities","map","bills","bill","console","log","allUtilitiesArray","allUtilities","findBillsOverNextWeek","arr","bill_date","state","tl","tc","tr","bl","bc","br","window","setTimeout","clearTimeout","place","x","setState","alertTimeout","bind","classes","Component"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from \"react\";\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n// @material-ui/icons\nimport AddAlert from \"@material-ui/icons/AddAlert\";\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.jsx\";\nimport Snackbar from \"components/Snackbar/Snackbar.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport { returnSeries, GetMonthBillCostsAndLabels, GetYearBillCostsAndLabels, GetNextMonthBillCostsAndLabels, getTimeToNextBill} from '../../variables/DateSort'\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\n\n\nclass NotificationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tl: false,\n      tc: false,\n      tr: false,\n      bl: false,\n      bc: false,\n      br: false\n    };\n  }\n  // to stop the warning of calling setState of unmounted component\n  componentWillUnmount() {\n    var id = window.setTimeout(null, 0);\n    while (id--) {\n      window.clearTimeout(id);\n    }\n  }\n  showNotification(place) {\n    var x = [];\n    x[place] = true;\n    this.setState(x);\n    this.alertTimeout = setTimeout(\n      function() {\n        x[place] = false;\n        this.setState(x);\n      }.bind(this),\n      6000\n    );\n  }\n\n  findCompany = (utility) => {\n    let company = this.props.companyData.find(company => company.id === utility.company_id)\n    return company\n  }\n\n\n  allBillsArray = () => {\n    let allBills = []\n    this.props.userInfo.utilities && this.props.userInfo.utilities.map(utility => utility.bills.map(bill => {\n      bill.utility = utility\n      return allBills = [...allBills, bill]\n    }))\n    console.log(allBills)\n    return allBills\n  }\n\n  allUtilitiesArray = () => {\n    let allUtilities = []\n      this.props.userInfo.utilities && this.props.userInfo.utilities.map(utility =>  allUtilities = [...allUtilities, utility])\n      return allUtilities\n  }\n\n  findBillsOverNextWeek = (bills) => {\n    let arr= []\n    bills.map(bill => {if(getTimeToNextBill(bill.bill_date)> 0 && getTimeToNextBill(bill.bill_date)< 8) {\n       arr = [...arr, bill]\n      }})\n      console.log(arr)\n      return 'hello'\n  }\n\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n      <GridContainer>\n      <GridItem xs={12} sm={12} md={6}>\n      <Card>\n        <CardHeader color=\"primary\">\n          <h4 className={classes.cardTitleWhite}>Bill Notifications</h4>\n          <p className={classes.cardCategoryWhite}>\n            Below are your upcoming bills in the next week {this.findBillsOverNextWeek(this.allBillsArray())}\n          </p>\n        </CardHeader>\n        <CardBody>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <SnackbarContent message={\"This is a plain notification\"} />\n              <SnackbarContent\n                message={\"This is a notification with close button.\"}\n                close\n              />\n              <SnackbarContent\n                message={\"This is a notification with close button and icon.\"}\n                close\n                icon={AddAlert}\n              />\n              <SnackbarContent\n                message={\n                  \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"\n                }\n                close\n                icon={AddAlert}\n              />\n            </GridItem>\n          </GridContainer>\n        </CardBody>\n      </Card>\n      </GridItem>\n\n      <GridItem xs={12} sm={12} md={6}>\n      <Card>\n        <CardHeader color=\"primary\">\n          <h4 className={classes.cardTitleWhite}>Contract Notifications</h4>\n          <p className={classes.cardCategoryWhite}>\n           Below are any upcoming contract renewals\n          </p>\n        </CardHeader>\n        <CardBody>\n         \n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <SnackbarContent\n                message={\n                  'INFO - This is a regular notification made with color=\"info\"'\n                }\n                close\n                color=\"info\"\n              />\n              <SnackbarContent\n                message={\n                  'SUCCESS - This is a regular notification made with color=\"success\"'\n                }\n                close\n                color=\"success\"\n              />\n              <SnackbarContent\n                message={\n                  'WARNING - This is a regular notification made with color=\"warning\"'\n                }\n                close\n                color=\"warning\"\n              />\n              <SnackbarContent\n                message={\n                  'DANGER - This is a regular notification made with color=\"danger\"'\n                }\n                close\n                color=\"danger\"\n              />\n              <SnackbarContent\n                message={\n                  'PRIMARY - This is a regular notification made with color=\"primary\"'\n                }\n                close\n                color=\"primary\"\n              />\n            </GridItem>\n          </GridContainer>\n        </CardBody>\n      </Card>\n      </GridItem>\n    </GridContainer>\n    </div>\n    \n    );\n  }\n}\n\nexport default withStyles(styles)(NotificationContainer);\n"]},"metadata":{},"sourceType":"module"}