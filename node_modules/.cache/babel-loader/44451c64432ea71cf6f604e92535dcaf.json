{"ast":null,"code":"import _toConsumableArray from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Dashboard/Dashboard.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport CardIcon from \"components/Card/CardIcon.jsx\"; // @material-ui/icons\n// import Store from \"@material-ui/icons/Store\";\n\nimport Warning from \"@material-ui/icons/Warning\"; // import DateRange from \"@material-ui/icons/DateRange\";\n// import LocalOffer from \"@material-ui/icons/LocalOffer\";\n// import Update from \"@material-ui/icons/Update\";\n// import ArrowUpward from \"@material-ui/icons/ArrowUpward\";\n\nimport AccessTime from \"@material-ui/icons/AccessTime\"; // import Accessibility from \"@material-ui/icons/Accessibility\";\n\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\"; // import Danger from \"components/Typography/Danger.jsx\";\n\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\"; // import CardIcon from \"components/Card/CardIcon.jsx\";\n\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport { GetMonthlyLabels, ThisMonth } from '../../variables/Labels';\nimport { returnSeries, GetMonthBillCostsAndLabels } from '../../variables/DateSort';\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport chartsStyle from \"assets/jss/material-dashboard-pro-react/views/chartsStyle.jsx\";\nimport { bugs, website, server } from \"variables/general.jsx\";\nimport { dailySalesChart, pieChart, // emailsSubscriptionChart,\ncompletedTasksChart } from \"variables/charts.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n    durations = 500;\n\nvar MonthlyBillChart = function MonthlyBillChart(that) {\n  return {\n    data: {\n      labels: GetMonthlyLabels(),\n      series: returnSeries(that.allBillsArray())\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 10\n      }),\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 20,\n        left: 0\n      },\n      axisY: {\n        showGrid: true,\n        offset: 40\n      },\n      axisX: {\n        showGrid: false\n      },\n      low: 0,\n      high: 1000,\n      showPoint: true,\n      showArea: true\n    },\n    // for animation\n    animation: {\n      draw: function draw(data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n};\n\nvar MonthlyBillBarChart = function MonthlyBillBarChart(that) {\n  return {\n    data: {\n      labels: that.props.userInfo.utilities && that.getMonthlyBillLabels(),\n      series: that.props.userInfo.utilities && that.getMonthlyBillCosts()\n    },\n    options: {\n      // reverseData: true,\n      horizontalBars: true,\n      axisX: {\n        showGrid: false,\n        offset: 70\n      },\n      chartPadding: {\n        top: 0,\n        right: 5,\n        bottom: 0,\n        left: 0\n      }\n    }\n  };\n};\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0,\n      allBills: {}\n    };\n\n    _this.allUtilitiesArray = function () {\n      var allUtilities = [];\n      _this.props.userInfo.utilities && _this.props.userInfo.utilities.map(function (utility) {\n        return allUtilities = [].concat(_toConsumableArray(allUtilities), [utility]);\n      });\n      return allUtilities;\n    };\n\n    _this.getMonthlyBillLabels = function () {\n      return GetMonthBillCostsAndLabels(_this.allUtilitiesArray()).map(function (bill) {\n        return bill.utility_type;\n      });\n    };\n\n    _this.getMonthlyBillCosts = function () {\n      return [GetMonthBillCostsAndLabels(_this.allUtilitiesArray()).map(function (bill) {\n        return bill.cost;\n      })];\n    };\n\n    _this.getTotalMonthlyOutgoings = function () {\n      var totalCost = 0;\n      GetMonthBillCostsAndLabels(_this.allUtilitiesArray()).map(function (bill) {\n        return totalCost = totalCost + bill.cost;\n      });\n      return parseFloat(Math.round(totalCost * 100) / 100).toFixed(2);\n    };\n\n    _this.allBillsArray = function () {\n      var allBills = [];\n      _this.props.userInfo.utilities && _this.props.userInfo.utilities.map(function (utility) {\n        return utility.bills.map(function (bill) {\n          return allBills = [].concat(_toConsumableArray(allBills), [bill]);\n        });\n      });\n      return allBills;\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleChangeIndex = function (index) {\n      _this.setState({\n        value: index\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart\",\n        data: MonthlyBillChart(this).data,\n        type: \"Line\",\n        options: MonthlyBillChart.options,\n        listener: MonthlyBillChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Yearly outgoings by month\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), \" Hello\"))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"warning\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"date_range\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Your total monthly outgoings for \", ThisMonth(), \":\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"\\xA3\", this.getTotalMonthlyOutgoings())), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Hello\"))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart\",\n        data: MonthlyBillBarChart(this).data,\n        type: \"Bar\",\n        options: MonthlyBillBarChart.options // responsiveOptions={MonthlyBillBarChart.responsiveOptions}\n        // listener={MonthlyBillBarChart.animation}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Total payments by utility type for \", ThisMonth()), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Last Campaign Performance\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }), \" campaign sent 2 days ago\"))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Timeline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.cardIconTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Pie Chart\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: pieChart.data,\n        type: \"Pie\",\n        options: pieChart.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        stats: true,\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: classes.legendTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"Legend\"), React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }), \" Apple\", \" \", React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.warning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), \" Samsung\", \" \", React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), \" Windows Phone\", \" \"))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Timeline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.cardIconTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Pie Chart\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: pieChart.data,\n        type: \"Pie\",\n        options: pieChart.options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        stats: true,\n        className: classes.cardFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: classes.legendTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Legend\"), React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }), \" Apple\", \" \", React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.warning,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }), \" Samsung\", \" \", React.createElement(\"i\", {\n        className: \"fas fa-circle \" + classes.danger,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), \" Windows Phone\", \" \")))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(chartsStyle)(Dashboard);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Dashboard/Dashboard.jsx"],"names":["React","PropTypes","ChartistGraph","withStyles","Icon","CardIcon","Warning","AccessTime","BugReport","Code","Cloud","GridItem","GridContainer","Table","Tasks","CustomTabs","Card","CardHeader","CardBody","CardFooter","GetMonthlyLabels","ThisMonth","returnSeries","GetMonthBillCostsAndLabels","Timeline","chartsStyle","bugs","website","server","dailySalesChart","pieChart","completedTasksChart","dashboardStyle","Chartist","require","delays","durations","MonthlyBillChart","that","data","labels","series","allBillsArray","options","lineSmooth","Interpolation","cardinal","tension","chartPadding","top","right","bottom","left","axisY","showGrid","offset","axisX","low","high","showPoint","showArea","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","MonthlyBillBarChart","props","userInfo","utilities","getMonthlyBillLabels","getMonthlyBillCosts","horizontalBars","Dashboard","state","value","allBills","allUtilitiesArray","allUtilities","map","utility","bill","utility_type","cost","getTotalMonthlyOutgoings","totalCost","parseFloat","Math","round","toFixed","bills","handleChange","event","setState","handleChangeIndex","classes","cardTitle","stats","cardCategory","cardIconTitle","cardFooter","legendTitle","info","warning","danger","Component","propTypes","object","isRequired"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,gBAA1B,C,CACA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,8BAArB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,4BAApB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,UAAP,MAAuB,sCAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,UAAP,MAAuB,gCAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAAQC,gBAAR,EAA0BC,SAA1B,QAA0C,wBAA1C;AACA,SAASC,YAAT,EAAuBC,0BAAvB,QAAwD,0BAAxD;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,WAAP,MAAwB,+DAAxB;AAEA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,QAAsC,uBAAtC;AAEA,SACEC,eADF,EAEEC,QAFF,EAGE;AACAC,mBAJF,QAKO,sBALP;AAOA,OAAOC,cAAP,MAA2B,kEAA3B;;AAGA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAG,EAAb;AAAA,IACEC,SAAS,GAAG,GADd;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,SAAW;AAClCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEpB,gBAAgB,EADpB;AAEJqB,MAAAA,MAAM,EAAEnB,YAAY,CAACgB,IAAI,CAACI,aAAL,EAAD;AAFhB,KAD4B;AAKlCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAEX,QAAQ,CAACY,aAAT,CAAuBC,QAAvB,CAAgC;AAC1CC,QAAAA,OAAO,EAAE;AADiC,OAAhC,CADL;AAIPC,MAAAA,YAAY,EAAE;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,KAAK,EAAE,CAFK;AAGZC,QAAAA,MAAM,EAAE,EAHI;AAIZC,QAAAA,IAAI,EAAE;AAJM,OAJP;AAUPC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,IADL;AAELC,QAAAA,MAAM,EAAE;AAFH,OAVA;AAcPC,MAAAA,KAAK,EAAE;AACLF,QAAAA,QAAQ,EAAE;AADL,OAdA;AAiBPG,MAAAA,GAAG,EAAE,CAjBE;AAkBPC,MAAAA,IAAI,EAAE,IAlBC;AAmBPC,MAAAA,SAAS,EAAE,IAnBJ;AAoBPC,MAAAA,QAAQ,EAAE;AApBH,KALyB;AA2BlC;AACAC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,cAASvB,IAAT,EAAe;AACnB,YAAIA,IAAI,CAACwB,IAAL,KAAc,MAAd,IAAwBxB,IAAI,CAACwB,IAAL,KAAc,MAA1C,EAAkD;AAChDxB,UAAAA,IAAI,CAACyB,OAAL,CAAaC,OAAb,CAAqB;AACnBC,YAAAA,CAAC,EAAE;AACDC,cAAAA,KAAK,EAAE,GADN;AAEDC,cAAAA,GAAG,EAAE,GAFJ;AAGDC,cAAAA,IAAI,EAAE9B,IAAI,CAAC+B,IAAL,CACHC,KADG,GAEHC,KAFG,CAEG,CAFH,EAEM,CAFN,EAGHC,SAHG,CAGO,CAHP,EAGUlC,IAAI,CAACmC,SAAL,CAAeC,MAAf,EAHV,EAIHC,SAJG,EAHL;AAQDC,cAAAA,EAAE,EAAEtC,IAAI,CAAC+B,IAAL,CAAUC,KAAV,GAAkBK,SAAlB,EARH;AASDE,cAAAA,MAAM,EAAE7C,QAAQ,CAAC8C,GAAT,CAAaC,MAAb,CAAoBC;AAT3B;AADgB,WAArB;AAaD,SAdD,MAcO,IAAI1C,IAAI,CAACwB,IAAL,KAAc,OAAlB,EAA2B;AAChCxB,UAAAA,IAAI,CAACyB,OAAL,CAAaC,OAAb,CAAqB;AACnBiB,YAAAA,OAAO,EAAE;AACPf,cAAAA,KAAK,EAAE,CAAC5B,IAAI,CAAC4C,KAAL,GAAa,CAAd,IAAmBhD,MADnB;AAEPiC,cAAAA,GAAG,EAAEhC,SAFE;AAGPiC,cAAAA,IAAI,EAAE,CAHC;AAIPQ,cAAAA,EAAE,EAAE,CAJG;AAKPC,cAAAA,MAAM,EAAE;AALD;AADU,WAArB;AASD;AACF;AA3BQ;AA5BuB,GAAX;AAAA,CAAzB;;AA2DA,IAAMM,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC9C,IAAD;AAAA,SAAW;AACrCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEF,IAAI,CAAC+C,KAAL,CAAWC,QAAX,CAAoBC,SAApB,IAAiCjD,IAAI,CAACkD,oBAAL,EADrC;AAEJ/C,MAAAA,MAAM,EAAEH,IAAI,CAAC+C,KAAL,CAAWC,QAAX,CAAoBC,SAApB,IAAiCjD,IAAI,CAACmD,mBAAL;AAFrC,KAD+B;AAKrC9C,IAAAA,OAAO,EAAE;AACP;AACA+C,MAAAA,cAAc,EAAE,IAFT;AAGPlC,MAAAA,KAAK,EAAE;AACLF,QAAAA,QAAQ,EAAE,KADL;AAELC,QAAAA,MAAM,EAAE;AAFH,OAHA;AAOPP,MAAAA,YAAY,EAAE;AACZC,QAAAA,GAAG,EAAE,CADO;AAEZC,QAAAA,KAAK,EAAE,CAFK;AAGZC,QAAAA,MAAM,EAAE,CAHI;AAIZC,QAAAA,IAAI,EAAE;AAJM;AAPP;AAL4B,GAAX;AAAA,CAA5B;;IAyBMuC,S;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKVC,iB,GAAoB,YAAM;AACxB,UAAIC,YAAY,GAAG,EAAnB;AACE,YAAKX,KAAL,CAAWC,QAAX,CAAoBC,SAApB,IAAiC,MAAKF,KAAL,CAAWC,QAAX,CAAoBC,SAApB,CAA8BU,GAA9B,CAAkC,UAAAC,OAAO;AAAA,eAAKF,YAAY,gCAAOA,YAAP,IAAqBE,OAArB,EAAjB;AAAA,OAAzC,CAAjC;AACA,aAAOF,YAAP;AACH,K;;UAEDR,oB,GAAuB,YAAM;AAC3B,aAAQjE,0BAA0B,CAAC,MAAKwE,iBAAL,EAAD,CAA1B,CAAqDE,GAArD,CAAyD,UAAAE,IAAI;AAAA,eAAIA,IAAI,CAACC,YAAT;AAAA,OAA7D,CAAR;AACD,K;;UAEDX,mB,GAAsB,YAAM;AAC1B,aAAO,CAAElE,0BAA0B,CAAC,MAAKwE,iBAAL,EAAD,CAA1B,CAAqDE,GAArD,CAAyD,UAAAE,IAAI;AAAA,eAAIA,IAAI,CAACE,IAAT;AAAA,OAA7D,CAAF,CAAP;AACD,K;;UAEDC,wB,GAA2B,YAAM;AACjC,UAAIC,SAAS,GAAG,CAAhB;AACAhF,MAAAA,0BAA0B,CAAC,MAAKwE,iBAAL,EAAD,CAA1B,CAAqDE,GAArD,CAAyD,UAAAE,IAAI;AAAA,eAAII,SAAS,GAAGA,SAAS,GAAGJ,IAAI,CAACE,IAAjC;AAAA,OAA7D;AACA,aAAOG,UAAU,CAACC,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAG,GAAvB,IAA8B,GAA/B,CAAV,CAA8CI,OAA9C,CAAsD,CAAtD,CAAP;AAEC,K;;UAEDjE,a,GAAgB,YAAM;AAClB,UAAIoD,QAAQ,GAAG,EAAf;AACA,YAAKT,KAAL,CAAWC,QAAX,CAAoBC,SAApB,IAAiC,MAAKF,KAAL,CAAWC,QAAX,CAAoBC,SAApB,CAA8BU,GAA9B,CAAkC,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACU,KAAR,CAAcX,GAAd,CAAkB,UAAAE,IAAI,EAAI;AACtG,iBAAOL,QAAQ,gCAAOA,QAAP,IAAiBK,IAAjB,EAAf;AACD,SAF6E,CAAJ;AAAA,OAAzC,CAAjC;AAGA,aAAOL,QAAP;AACD,K;;UAEDe,Y,GAAe,UAACC,KAAD,EAAQjB,KAAR,EAAkB;AAC/B,YAAKkB,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;UAEDmB,iB,GAAoB,UAAA7B,KAAK,EAAI;AAC3B,YAAK4B,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAAEV;AAAT,OAAd;AACD,K;;;;;;;6BACQ;AAAA,UACC8B,OADD,GACa,KAAK5B,KADlB,CACC4B,OADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAE5E,gBAAgB,CAAC,IAAD,CAAhB,CAAuBE,IAF/B;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,OAAO,EAAEF,gBAAgB,CAACM,OAJ5B;AAKE,QAAA,QAAQ,EAAEN,gBAAgB,CAACwB,SAL7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAUE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEoD,OAAO,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CAVF,EAaE,oBAAC,UAAD;AAAY,QAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,WADF,CAbF,CADF,CADF,CAFF,EAyBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,SAAlB;AAA4B,QAAA,KAAK,MAAjC;AAAkC,QAAA,IAAI,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE;AAAG,QAAA,SAAS,EAAEF,OAAO,CAACG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAAuE/F,SAAS,EAAhF,MAJF,EAKE;AAAI,QAAA,SAAS,EAAE4F,OAAO,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,KAAKZ,wBAAL,EADF,CALF,CADF,EAUE,oBAAC,UAAD;AAAY,QAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEW,OAAO,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CAVF,CADF,CAHF,EAwBE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAE/B,mBAAmB,CAAC,IAAD,CAAnB,CAA0B7C,IAFlC;AAGE,QAAA,IAAI,EAAC,KAHP;AAIE,QAAA,OAAO,EAAE6C,mBAAmB,CAACzC,OAJ/B,CAKE;AACA;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAWE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEsE,OAAO,CAACC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAsE7F,SAAS,EAA/E,CADF,EAEE;AAAG,QAAA,SAAS,EAAE4F,OAAO,CAACG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF,CAXF,EAiBE,oBAAC,UAAD;AAAY,QAAA,KAAK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEH,OAAO,CAACE,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,8BADF,CAjBF,CADF,CAxBF,CAzBF,EA2EE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AAA2B,QAAA,IAAI,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAI,QAAA,SAAS,EAAEF,OAAO,CAACI,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAEvF,QAAQ,CAACS,IADjB;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,OAAO,EAAET,QAAQ,CAACa,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAcE,oBAAC,UAAD;AAAY,QAAA,KAAK,MAAjB;AAAkB,QAAA,SAAS,EAAEsE,OAAO,CAACK,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEL,OAAO,CAACM,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,SAAS,EAAE,mBAAmBN,OAAO,CAACO,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,iBAGE;AAAG,QAAA,SAAS,EAAE,mBAAmBP,OAAO,CAACQ,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,mBAKE;AAAG,QAAA,SAAS,EAAE,mBAAmBR,OAAO,CAACS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,wBAdF,CADJ,CADA,EA0BE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,EAAd;AAAkB,QAAA,EAAE,EAAE,EAAtB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAC,QAAlB;AAA2B,QAAA,IAAI,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAI,QAAA,SAAS,EAAET,OAAO,CAACI,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,CADF,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAEvF,QAAQ,CAACS,IADjB;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,OAAO,EAAET,QAAQ,CAACa,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,EAcE,oBAAC,UAAD;AAAY,QAAA,KAAK,MAAjB;AAAkB,QAAA,SAAS,EAAEsE,OAAO,CAACK,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAEL,OAAO,CAACM,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAG,QAAA,SAAS,EAAE,mBAAmBN,OAAO,CAACO,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,iBAGE;AAAG,QAAA,SAAS,EAAE,mBAAmBP,OAAO,CAACQ,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,mBAKE;AAAG,QAAA,SAAS,EAAE,mBAAmBR,OAAO,CAACS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,wBAdF,CADF,CA1BF,CA3EF,CADF;AAkID;;;;EA9KqB1H,KAAK,CAAC2H,S;;AAiL9BhC,SAAS,CAACiC,SAAV,GAAsB;AACpBX,EAAAA,OAAO,EAAEhH,SAAS,CAAC4H,MAAV,CAAiBC;AADN,CAAtB;AAIA,eAAe3H,UAAU,CAAC6B,cAAD,CAAV,CAA2BP,WAA3B,EAAwCkE,SAAxC,CAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\n// @material-ui/icons\n// import Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\n// import DateRange from \"@material-ui/icons/DateRange\";\n// import LocalOffer from \"@material-ui/icons/LocalOffer\";\n// import Update from \"@material-ui/icons/Update\";\n// import ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\n// import Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\n// import Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\n// import CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport {GetMonthlyLabels, ThisMonth} from '../../variables/Labels'\nimport { returnSeries, GetMonthBillCostsAndLabels} from '../../variables/DateSort'\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport chartsStyle from \"assets/jss/material-dashboard-pro-react/views/chartsStyle.jsx\";\n\nimport { bugs, website, server } from \"variables/general.jsx\";\n\nimport {\n  dailySalesChart,\n  pieChart,\n  // emailsSubscriptionChart,\n  completedTasksChart\n} from \"variables/charts.jsx\";\n\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n  durations = 500;\n\n\nconst MonthlyBillChart = (that) => ({\n  data: {\n    labels: GetMonthlyLabels(),\n    series: returnSeries(that.allBillsArray())\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 10,\n    }),\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 20,\n      left: 0\n    },\n    axisY: {\n      showGrid: true,\n      offset: 40\n    },\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    showPoint: true,\n    showArea: true\n  },\n  // for animation\n  animation: {\n    draw: function(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n});\n\nconst MonthlyBillBarChart = (that) => ({\n  data: {\n    labels: that.props.userInfo.utilities && that.getMonthlyBillLabels(),\n    series: that.props.userInfo.utilities && that.getMonthlyBillCosts()\n  },\n  options: {\n    // reverseData: true,\n    horizontalBars: true,\n    axisX: {\n      showGrid: false,\n      offset: 70\n    },\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n});\n\n\n\n\n\nclass Dashboard extends React.Component {\n  state = {\n    value: 0,\n    allBills: {}\n  };\n\nallUtilitiesArray = () => {\n  let allUtilities = []\n    this.props.userInfo.utilities && this.props.userInfo.utilities.map(utility =>  allUtilities = [...allUtilities, utility])\n    return allUtilities\n}\n\ngetMonthlyBillLabels = () => {\n  return (GetMonthBillCostsAndLabels(this.allUtilitiesArray()).map(bill => bill.utility_type))\n}\n\ngetMonthlyBillCosts = () => {\n  return [(GetMonthBillCostsAndLabels(this.allUtilitiesArray()).map(bill => bill.cost))]\n}\n\ngetTotalMonthlyOutgoings = () => {\nlet totalCost = 0\nGetMonthBillCostsAndLabels(this.allUtilitiesArray()).map(bill => totalCost = totalCost + bill.cost)\nreturn parseFloat(Math.round(totalCost * 100) / 100).toFixed(2)\n\n}\n\nallBillsArray = () => {\n    let allBills = []\n    this.props.userInfo.utilities && this.props.userInfo.utilities.map(utility => utility.bills.map(bill => {\n      return allBills = [...allBills, bill]\n    }))\n    return allBills\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        \n        <GridContainer>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card chart>\n              <CardHeader color=\"success\">\n                <ChartistGraph\n                  className=\"ct-chart\"\n                  data={MonthlyBillChart(this).data}\n                  type=\"Line\"\n                  options={MonthlyBillChart.options}\n                  listener={MonthlyBillChart.animation}\n                />\n              </CardHeader>\n              <CardBody>\n                <h4 className={classes.cardTitle}>Yearly outgoings by month</h4>\n              </CardBody>\n              <CardFooter chart>\n                <div className={classes.stats}>\n                  <AccessTime /> Hello\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n        </GridContainer>  \n        <GridContainer>\n          \n         \n          <GridItem xs={12} sm={4} md={4} lg={4}>\n            <Card>\n              <CardHeader color=\"warning\" stats icon>\n                <CardIcon color=\"warning\">\n                  <Icon>date_range</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory} >Your total monthly outgoings for {ThisMonth()}:</p>\n                <h3 className={classes.cardTitle}>\n                £{this.getTotalMonthlyOutgoings()}\n                </h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                    <Warning />\n                  <p>\n                    Hello\n                  </p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={8}>\n            <Card chart>\n              <CardHeader color=\"info\">\n                <ChartistGraph\n                  className=\"ct-chart\"\n                  data={MonthlyBillBarChart(this).data}\n                  type=\"Bar\"\n                  options={MonthlyBillBarChart.options}\n                  // responsiveOptions={MonthlyBillBarChart.responsiveOptions}\n                  // listener={MonthlyBillBarChart.animation}\n                />\n              </CardHeader>\n              <CardBody>\n                <h4 className={classes.cardTitle}>Total payments by utility type for {ThisMonth()}</h4>\n                <p className={classes.cardCategory}>\n                  Last Campaign Performance\n                </p>\n              </CardBody>\n              <CardFooter chart>\n                <div className={classes.stats}>\n                  <AccessTime /> campaign sent 2 days ago\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n        </GridContainer>\n        <GridContainer>\n        <GridItem xs={12} sm={12} md={5}>\n            <Card>\n              <CardHeader color=\"danger\" icon>\n                <CardIcon color=\"danger\">\n                  <Timeline />\n                </CardIcon>\n                <h4 className={classes.cardIconTitle}>Pie Chart</h4>\n              </CardHeader>\n              <CardBody>\n                <ChartistGraph\n                  data={pieChart.data}\n                  type=\"Pie\"\n                  options={pieChart.options}\n                />\n              </CardBody>\n              <CardFooter stats className={classes.cardFooter}>\n                <h6 className={classes.legendTitle}>Legend</h6>\n                <i className={\"fas fa-circle \" + classes.info} /> Apple{` `}\n                <i className={\"fas fa-circle \" + classes.warning} /> Samsung\n                {` `}\n                <i className={\"fas fa-circle \" + classes.danger} /> Windows\n                Phone{` `}\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={5}>\n            <Card>\n              <CardHeader color=\"danger\" icon>\n                <CardIcon color=\"danger\">\n                  <Timeline />\n                </CardIcon>\n                <h4 className={classes.cardIconTitle}>Pie Chart</h4>\n              </CardHeader>\n              <CardBody>\n                <ChartistGraph\n                  data={pieChart.data}\n                  type=\"Pie\"\n                  options={pieChart.options}\n                />\n              </CardBody>\n              <CardFooter stats className={classes.cardFooter}>\n                <h6 className={classes.legendTitle}>Legend</h6>\n                <i className={\"fas fa-circle \" + classes.info} /> Apple{` `}\n                <i className={\"fas fa-circle \" + classes.warning} /> Samsung\n                {` `}\n                <i className={\"fas fa-circle \" + classes.danger} /> Windows\n                Phone{` `}\n              </CardFooter>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(chartsStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}