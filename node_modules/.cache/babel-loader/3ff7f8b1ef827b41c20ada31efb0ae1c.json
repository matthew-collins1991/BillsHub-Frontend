{"ast":null,"code":"import _defineProperty from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/ShowUtilityCard.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Warning from \"@material-ui/icons/Warning\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\nimport Create from \"@material-ui/icons/Create\";\nimport Add from \"@material-ui/icons/Add\";\nimport Modal from '@material-ui/core/Modal';\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Datetime from \"react-datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport API from \"../../adapters/API\";\nimport InnerModal from './InnerModal';\nimport { GetMonthlyLabels } from '../../variables/Labels';\nimport { sortDatesHighToLow, returnSeries } from '../../variables/DateSort';\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\nfunction getModalStyle() {\n  return {\n    position: 'absolute',\n    // top: `${50}%`,\n    left: 'auto',\n    width: 400 + 'px',\n    padding: 200 + 'px' // transform: `translate(-${50}%, -${45}%)`,\n\n  };\n} // CHARTS\n\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n    durations = 500;\n\nvar MonthlyBillChart = function MonthlyBillChart(that) {\n  return {\n    data: {\n      labels: GetMonthlyLabels(),\n      series: returnSeries(that.props.utilityData.bills.sort(sortDatesHighToLow))\n    },\n    options: {\n      lineSmooth: Chartist.Interpolation.cardinal({\n        tension: 5\n      }),\n      showArea: true,\n      low: that.minValue(),\n      high: that.maxValue(),\n      // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n      chartPadding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    },\n    // for animation\n    animation: {\n      draw: function draw(data) {\n        if (data.type === \"line\" || data.type === \"area\") {\n          data.element.animate({\n            d: {\n              begin: 600,\n              dur: 700,\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n              to: data.path.clone().stringify(),\n              easing: Chartist.Svg.Easing.easeOutQuint\n            }\n          });\n        } else if (data.type === \"point\") {\n          data.element.animate({\n            opacity: {\n              begin: (data.index + 1) * delays,\n              dur: durations,\n              from: 0,\n              to: 1,\n              easing: \"ease\"\n            }\n          });\n        }\n      }\n    }\n  };\n};\n\nvar ShowUtilityCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowUtilityCard, _React$Component);\n\n  function ShowUtilityCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowUtilityCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowUtilityCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0,\n      billDate: \"\",\n      cost: \"\",\n      open: false,\n      billData: {}\n    };\n\n    _this.maxValue = function () {\n      var arr = returnSeries(_this.props.utilityData.bills.sort(sortDatesHighToLow)).flat();\n      var max = Math.max.apply(Math, _toConsumableArray(arr));\n      return max + max * 0.2;\n    };\n\n    _this.minValue = function () {\n      var arr = returnSeries(_this.props.utilityData.bills.sort(sortDatesHighToLow)).flat();\n      var min = Math.min.apply(Math, _toConsumableArray(arr));\n      return min - min * 0.5;\n    };\n\n    _this.sortedBills = function () {\n      return _this.props.utilityData.bills.sort(sortDatesHighToLow);\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleBillChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.findCompany = function (utility) {\n      var company = _this.props.companyData.find(function (company) {\n        return company.id === utility.company_id;\n      });\n\n      return company;\n    };\n\n    _this.getNextBillDate = function (bills) {\n      var date = bills[0].bill_date;\n      return _this.formatDate(date);\n    };\n\n    _this.getTimeToNextBill = function (date) {\n      var one_day = 1000 * 60 * 60 * 24;\n      var date1 = new Date(date[0].bill_date);\n      var date2 = new Date();\n      var diff = date2.getTime() - date1.getTime(); // let diffPositive = Math.abs(diff)\n\n      return Math.ceil(diffPositive / one_day);\n    };\n\n    _this.formatDate = function (date) {\n      var test = new Date(date);\n      return test.toDateString();\n    };\n\n    _this.getBillCost = function (bill) {\n      return parseFloat(Math.round(bill * 100) / 100).toFixed(2);\n    };\n\n    _this.getNextBillCost = function (bills) {\n      return parseFloat(Math.round(bills[0].cost * 100) / 100).toFixed(2);\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleSubmitClick = function () {\n      var bill = {\n        bill_date: _this.state.billDate,\n        cost: _this.state.cost,\n        utility_id: _this.props.utilityData.id\n      };\n\n      _this.props.addBillLocal(bill);\n\n      API.addNewBill(bill).then(function (data) {\n        if (data.error) {\n          alert(\"something is wrong!\");\n        } else {\n          alert(\"Bill Added!\");\n        }\n      });\n    };\n\n    _this.handleButtonClick = function (prop) {\n      if (prop.color === \"success\") {\n        _this.setState({\n          billData: prop.bill\n        });\n\n        _this.handleOpen();\n      } else {\n        _this.props.deleteBillLocal(prop.bill);\n\n        API.deleteBill(prop.bill).then(function (data) {\n          if (data.error) {\n            alert(\"something is wrong!\");\n          } else {\n            alert(\"Bill Deleted!\");\n          }\n        });\n      }\n    };\n\n    _this.handleChangeIndex = function (index) {\n      _this.setState({\n        value: index\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowUtilityCard, [{\n    key: \"handleFirstDate\",\n    value: function handleFirstDate(date) {\n      this.setState({\n        billDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          utilityData = _this$props.utilityData;\n\n      var simpleButtons = function simpleButtons(bill) {\n        return [{\n          color: \"success\",\n          icon: Edit,\n          bill: bill\n        }, {\n          color: \"danger\",\n          icon: Close,\n          bill: bill\n        }].map(function (prop, key) {\n          return React.createElement(Button, {\n            style: {\n              padding: 5 + 'px'\n            },\n            color: prop.color,\n            simple: true,\n            className: classes.actionButton,\n            key: key,\n            onClick: function onClick() {\n              return _this2.handleButtonClick(prop);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237\n            },\n            __self: this\n          }, React.createElement(prop.icon, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }));\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"warning\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"date_range\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Your next bill date:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, this.getNextBillDate(this.sortedBills()))), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Danger, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"This is \", this.getTimeToNextBill(this.sortedBills()), \" days from now\"))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"content_copy\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Your next bill cost:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, \"\\xA3\", this.getNextBillCost(this.sortedBills()))), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Payment type: \", utilityData.payment_type))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: 'https://' + this.findCompany(utilityData).url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"link\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Open webpage for:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, this.findCompany(utilityData).name)), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"http\"), this.findCompany(utilityData).url)))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart\",\n        data: MonthlyBillChart(this).data,\n        type: \"Line\",\n        options: MonthlyBillChart(this).options,\n        listener: MonthlyBillChart(this).animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Daily Sales\"), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.successText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(ArrowUpward, {\n        className: classes.upArrowCardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), \" 55%\"), \" \", \"increase in today sales.\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }), \" updated 4 minutes ago\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"primary\",\n        tabs: [{\n          tabName: \"Past Bills\",\n          tabIcon: Check,\n          tabContent: React.createElement(Table, {\n            tableHeaderColor: \"warning\",\n            tableHead: [\"ID\", \"Cost\", 'Due Date', 'Actions'],\n            tableData: this.sortedBills().map(function (bill, index) {\n              return [index + 1, \"\\xA3\".concat(_this2.getBillCost(bill.cost)), _this2.formatDate(bill.bill_date), simpleButtons(bill)];\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 351\n            },\n            __self: this\n          })\n        }, {\n          tabName: \"New Bill\",\n          tabIcon: Add,\n          tabContent: React.createElement(GridContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            fullWidth: true,\n            style: {\n              paddingTop: 10 + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 369\n            },\n            __self: this\n          }, React.createElement(Datetime, {\n            onChange: function onChange(date) {\n              return _this2.handleFirstDate(date);\n            },\n            timeFormat: false,\n            inputProps: {\n              placeholder: \"Payment Date\",\n              name: \"billDate\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 370\n            },\n            __self: this\n          }))), React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 381\n            },\n            __self: this\n          }, React.createElement(CustomInput, {\n            labelText: \"Cost\",\n            id: \"cost\",\n            formControlProps: {\n              fullWidth: true\n            },\n            inputProps: {\n              name: \"cost\",\n              onChange: this.handleBillChange,\n              type: \"number\",\n              step: \"0.01\",\n              min: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 382\n            },\n            __self: this\n          })), React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"primary\",\n            onClick: this.handleSubmitClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          }, \"Add New Bill\")))\n        }, {\n          tabName: \"Contract Info\",\n          tabIcon: Create,\n          tabContent: React.createElement(Table, {\n            tableHeaderColor: \"warning\",\n            tableHead: [\"Detail\", \"Info\"],\n            tableData: [['Utility Type:', this.props.utilityData.utility_type], ['Start Date:', this.formatDate(this.props.utilityData.start_date)], ['Renewal Date:', this.formatDate(this.props.utilityData.renewal_date)], ['Payment Method:', this.props.utilityData.payment_type], ['Payment Frequency:', this.props.utilityData.payment_freq]],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 410\n            },\n            __self: this\n          })\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(InnerModal, {\n        billData: this.state.billData,\n        handleClose: this.handleClose,\n        updateBillLocal: function updateBillLocal(bill) {\n          return _this2.props.updateBillLocal(bill);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ShowUtilityCard;\n}(React.Component);\n\nShowUtilityCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(ShowUtilityCard);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/ShowUtilityCard.jsx"],"names":["React","PropTypes","ChartistGraph","withStyles","Icon","Warning","Edit","Close","Check","Create","Add","Modal","ArrowUpward","AccessTime","CustomInput","Datetime","FormControl","GridItem","GridContainer","Table","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","Button","API","InnerModal","GetMonthlyLabels","sortDatesHighToLow","returnSeries","dashboardStyle","getModalStyle","position","left","width","padding","Chartist","require","delays","durations","MonthlyBillChart","that","data","labels","series","props","utilityData","bills","sort","options","lineSmooth","Interpolation","cardinal","tension","showArea","low","minValue","high","maxValue","chartPadding","top","right","bottom","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","ShowUtilityCard","state","value","billDate","cost","open","billData","arr","flat","max","Math","min","sortedBills","handleOpen","setState","handleClose","handleBillChange","event","target","name","findCompany","utility","company","companyData","find","id","company_id","getNextBillDate","date","bill_date","formatDate","getTimeToNextBill","one_day","date1","Date","date2","diff","getTime","ceil","diffPositive","test","toDateString","getBillCost","bill","parseFloat","round","toFixed","getNextBillCost","handleChange","handleSubmitClick","utility_id","addBillLocal","addNewBill","then","error","alert","handleButtonClick","prop","color","deleteBillLocal","deleteBill","handleChangeIndex","classes","simpleButtons","icon","map","key","actionButton","cardCategory","cardTitle","stats","payment_type","url","successText","upArrowCardCategory","tabName","tabIcon","tabContent","paddingTop","handleFirstDate","placeholder","fullWidth","onChange","step","utility_type","start_date","renewal_date","payment_freq","paper","updateBillLocal","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Warning from \"@material-ui/icons/Warning\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\nimport Create from \"@material-ui/icons/Create\";\nimport Add from \"@material-ui/icons/Add\";\nimport Modal from '@material-ui/core/Modal';\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Datetime from \"react-datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport API from \"../../adapters/API\";\nimport InnerModal from './InnerModal'\nimport {GetMonthlyLabels} from '../../variables/Labels'\nimport {sortDatesHighToLow, returnSeries} from '../../variables/DateSort'\n\n\n\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\nfunction getModalStyle() {\n  return {\n    position: 'absolute',\n    // top: `${50}%`,\n    left: 'auto',\n    width: 400 + 'px',\n    padding: 200 + 'px',\n    // transform: `translate(-${50}%, -${45}%)`,\n  };\n}\n\n\n// CHARTS\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n  durations = 500;\n\nconst MonthlyBillChart = (that) => ({\n  data: {\n    labels: GetMonthlyLabels(),\n    series: returnSeries(that.props.utilityData.bills.sort(sortDatesHighToLow))\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 5\n    }),\n    showArea: true,\n    low: that.minValue(),\n    high: that.maxValue(), // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n  animation: {\n    draw: function(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n});\n\n\n\nclass ShowUtilityCard extends React.Component {\n\n\n  state = {\n    value: 0,\n    billDate: \"\",\n    cost: \"\",\n    open: false,\n    billData: {}\n  };\n\n\nmaxValue = () => {\n  let arr = returnSeries(this.props.utilityData.bills.sort(sortDatesHighToLow)).flat()\n  let max = Math.max(...arr)\n  return (max+(max*0.2))\n}\n  \nminValue = () => {\n  let arr = returnSeries(this.props.utilityData.bills.sort(sortDatesHighToLow)).flat()\n  let min = Math.min(...arr)\n  return (min-(min*0.5))\n}\n\n  sortedBills = () => this.props.utilityData.bills.sort(sortDatesHighToLow)\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  handleBillChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  findCompany = (utility) => {\n    let company = this.props.companyData.find(company => company.id === utility.company_id)\n    return company\n  }\n\n  getNextBillDate = (bills) => {\n    let date = bills[0].bill_date\n    return this.formatDate(date)\n  } \n\n  getTimeToNextBill = (date) => {\n\n    let one_day=1000*60*60*24\n    let date1 = new Date(date[0].bill_date)\n    let date2 = new Date()\n    let diff = date2.getTime() - date1.getTime()\n    // let diffPositive = Math.abs(diff)\n    return Math.ceil(diffPositive/one_day)\n    }\n\n  formatDate = (date) => {\n    var test = new Date(date)\n    return test.toDateString()\n   }\n\n  getBillCost = (bill) => parseFloat(Math.round(bill * 100) / 100).toFixed(2);\n\n  getNextBillCost = (bills) => parseFloat(Math.round((bills[0].cost) * 100) / 100).toFixed(2);\n  \n  \n  handleFirstDate(date) {\n    this.setState({ billDate: date });\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleSubmitClick = () => {\n    const bill = {\n      bill_date: this.state.billDate,\n      cost: this.state.cost,\n      utility_id: this.props.utilityData.id\n    }\n    this.props.addBillLocal(bill)\n    API.addNewBill(bill).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } else {\n        alert(\"Bill Added!\")\n      }\n    });\n  }\n\n\n  handleButtonClick = (prop) => {\n    if(prop.color === \"success\"){ \n      this.setState({\n        billData: prop.bill\n      })\n      this.handleOpen()\n  } else{\n    this.props.deleteBillLocal(prop.bill)\n    API.deleteBill(prop.bill).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } else {\n        alert(\"Bill Deleted!\")\n      }\n    });\n  }\n}\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, utilityData} = this.props;\n    const simpleButtons = (bill) => [\n      { color: \"success\", icon: Edit, bill: bill },\n      { color: \"danger\", icon: Close, bill: bill }\n    ].map((prop, key) => {\n      return (\n        <Button\n          style={{padding: 5 + 'px'}}\n          color={prop.color}\n          simple\n          className={classes.actionButton}\n          key={key}\n          onClick= {()=>this.handleButtonClick(prop)}\n        >\n          <prop.icon className={classes.icon} />\n        </Button>\n      );\n    });\n    return (\n     <>\n        <GridContainer>\n          <GridItem xs={12} sm={4} md={4} lg={4}>\n            <Card>\n              <CardHeader color=\"warning\" stats icon>\n                <CardIcon color=\"warning\">\n                  <Icon>date_range</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory} >Your next bill date:</p>\n                <h3 className={classes.cardTitle}>\n                {this.getNextBillDate(this.sortedBills())}\n                </h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                  <Danger>\n                    <Warning />\n                  </Danger>\n                  <p>\n                    {\n                      \n                    }\n                    This is {this.getTimeToNextBill(this.sortedBills())} days from now\n                  </p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={4} md={4} lg={4}>\n            <Card>\n              <CardHeader color=\"success\" stats icon>\n                <CardIcon color=\"success\">\n                <Icon>content_copy</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory}>Your next bill cost:</p>\n                <h3 className={classes.cardTitle}>£{this.getNextBillCost(this.sortedBills())}</h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                  <p>Payment type: {utilityData.payment_type}</p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          \n          <GridItem xs={12} sm={4} md={4} lg={4}>\n          <a href={'https://' + this.findCompany(utilityData).url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Card>\n              <CardHeader color=\"danger\" stats icon>\n                <CardIcon color=\"danger\">\n                  <Icon>link</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory}>Open webpage for:</p>\n                <h3 className={classes.cardTitle}>{this.findCompany(utilityData).name}</h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                <Icon>http</Icon>\n                {this.findCompany(utilityData).url}\n                </div>\n              </CardFooter>\n            </Card>\n            </a>\n          </GridItem>\n        </GridContainer>\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card chart>\n              <CardHeader color=\"success\">\n                <ChartistGraph\n                  className=\"ct-chart\"\n                  data={MonthlyBillChart(this).data}\n                  type=\"Line\"\n                  options={MonthlyBillChart(this).options}\n                  listener={MonthlyBillChart(this).animation}\n                />\n              </CardHeader>\n              <CardBody>\n                <h4 className={classes.cardTitle}>Daily Sales</h4>\n                <p className={classes.cardCategory}>\n                  <span className={classes.successText}>\n                    <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                  </span>{\" \"}\n                  increase in today sales.\n                </p>\n              </CardBody>\n              <CardFooter chart>\n                <div className={classes.stats}>\n                  <AccessTime /> updated 4 minutes ago\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <CustomTabs\n              headerColor=\"primary\"\n              tabs={[\n                {\n                  tabName: \"Past Bills\",\n                  tabIcon: Check,\n                  tabContent: (\n                    <Table\n                    tableHeaderColor=\"warning\"\n                    tableHead={[\"ID\", \"Cost\", 'Due Date', 'Actions']}\n                    tableData={\n                      this.sortedBills().map((bill, index) => \n                         [index+1, `£${this.getBillCost(bill.cost)}`, this.formatDate(bill.bill_date), simpleButtons(bill)]\n                      )\n                    }\n                  />\n                \n                  )\n                },\n                {\n                  tabName: \"New Bill\",\n                  tabIcon: Add,\n                  tabContent: (\n                    <GridContainer>\n                    <GridItem xs={12} sm={12} md={6} >\n                    <FormControl fullWidth style={{paddingTop: 10 +'px'}}>\n                      <Datetime\n                        onChange={date => this.handleFirstDate(date)}\n                        timeFormat={false}\n                        inputProps={{\n                          placeholder: \"Payment Date\",\n                          name: \"billDate\",\n                          \n                        }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    labelText=\"Cost\"\n                    id=\"cost\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      name: \"cost\",\n                      onChange: this.handleBillChange,\n                      type: \"number\",\n                      step: \"0.01\",\n                      min: 0\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6} >\n                  <Button color=\"primary\" onClick={this.handleSubmitClick}>\n                    Add New Bill\n                  </Button>\n                  </GridItem>\n                </GridContainer>\n                  )\n                },\n                {\n                  tabName: \"Contract Info\",\n                  tabIcon: Create,\n                  tabContent: (\n                    \n                <Table\n                tableHeaderColor=\"warning\"\n                tableHead={[\"Detail\", \"Info\"]}\n                tableData={[\n                     ['Utility Type:',  this.props.utilityData.utility_type],\n                     ['Start Date:',  this.formatDate(this.props.utilityData.start_date)],\n                     ['Renewal Date:',  this.formatDate(this.props.utilityData.renewal_date)],\n                     ['Payment Method:',  this.props.utilityData.payment_type],\n                     ['Payment Frequency:',  this.props.utilityData.payment_freq]\n                ]\n                }\n              />\n                \n                  )\n                }\n              ]}\n            />\n          </GridItem>\n        </GridContainer>\n        <GridContainer>\n        <GridItem xs={12} sm={12} md={6} >\n        <Modal\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <InnerModal billData = {this.state.billData} handleClose={this.handleClose} updateBillLocal = {(bill)=>this.props.updateBillLocal(bill)}/>\n\n          </div>\n        </Modal>\n        </GridItem>\n        </GridContainer>\n     </>\n    );\n  }\n}\n\nShowUtilityCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(ShowUtilityCard);\n"]},"metadata":{},"sourceType":"module"}