{"ast":null,"code":"import _defineProperty from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/bills-hub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/bills-hub/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/bills-hub/src/components/Snackbar/SnackbarContent.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\";\nimport snackbarContentStyle from \"assets/jss/material-dashboard-pro-react/components/snackbarContentStyle.jsx\";\n\nfunction SnackbarContent(_ref) {\n  var _cx2;\n\n  var props = _extends({}, _ref);\n\n  var classes = props.classes,\n      message = props.message,\n      color = props.color,\n      close = props.close,\n      icon = props.icon;\n  var action = [];\n  var messageClasses = cx(_defineProperty({}, classes.iconMessage, icon !== undefined));\n\n  if (close !== undefined) {\n    action = [React.createElement(IconButton, {\n      className: classes.iconButton,\n      key: \"close\",\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(Close, {\n      className: classes.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }))];\n  }\n\n  var iconClasses = cx((_cx2 = {}, _defineProperty(_cx2, classes.icon, classes.icon), _defineProperty(_cx2, classes.infoIcon, color === \"info\"), _defineProperty(_cx2, classes.successIcon, color === \"success\"), _defineProperty(_cx2, classes.warningIcon, color === \"warning\"), _defineProperty(_cx2, classes.dangerIcon, color === \"danger\"), _defineProperty(_cx2, classes.primaryIcon, color === \"primary\"), _defineProperty(_cx2, classes.roseIcon, color === \"rose\"), _cx2));\n  return React.createElement(Snack, {\n    message: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, icon !== undefined ? React.createElement(props.icon, {\n      className: iconClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }) : null, React.createElement(\"span\", {\n      className: messageClasses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, message)),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message\n    },\n    action: action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nSnackbarContent.defaultProps = {\n  color: \"info\"\n};\nSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\", \"rose\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.func\n};\nexport default withStyles(snackbarContentStyle)(SnackbarContent);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/bills-hub/src/components/Snackbar/SnackbarContent.jsx"],"names":["React","PropTypes","cx","withStyles","Snack","IconButton","Close","snackbarContentStyle","SnackbarContent","props","classes","message","color","close","icon","action","messageClasses","iconMessage","undefined","iconButton","iconClasses","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","root","defaultProps","propTypes","object","isRequired","node","oneOf","bool","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n\nimport snackbarContentStyle from \"assets/jss/material-dashboard-pro-react/components/snackbarContentStyle.jsx\";\n\nfunction SnackbarContent({ ...props }) {\n  const { classes, message, color, close, icon } = props;\n  var action = [];\n  const messageClasses = cx({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  const iconClasses = cx({\n    [classes.icon]: classes.icon,\n    [classes.infoIcon]: color === \"info\",\n    [classes.successIcon]: color === \"success\",\n    [classes.warningIcon]: color === \"warning\",\n    [classes.dangerIcon]: color === \"danger\",\n    [classes.primaryIcon]: color === \"primary\",\n    [classes.roseIcon]: color === \"rose\"\n  });\n  return (\n    <Snack\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={iconClasses} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message\n      }}\n      action={action}\n    />\n  );\n}\n\nSnackbarContent.defaultProps = {\n  color: \"info\"\n};\n\nSnackbarContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"primary\",\n    \"rose\"\n  ]),\n  close: PropTypes.bool,\n  icon: PropTypes.func\n};\n\nexport default withStyles(snackbarContentStyle)(SnackbarContent);\n"]},"metadata":{},"sourceType":"module"}