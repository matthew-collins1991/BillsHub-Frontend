{"ast":null,"code":"import _defineProperty from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/ShowUtilityCard.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // react plugin for creating charts\n\nimport ChartistGraph from \"react-chartist\"; // @material-ui/core\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\"; // @material-ui/icons\n\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport Person from \"@material-ui/icons/Person\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\"; // core components\n\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Datetime from \"react-datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport API from \"../../adapters/API\";\nimport InnerModal from './InnerModal';\nimport { bugs, website, server } from \"variables/general.jsx\";\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\nfunction getModalStyle() {\n  return {\n    position: 'absolute',\n    // top: `${50}%`,\n    left: 'auto',\n    width: 400 + 'px',\n    padding: 200 + 'px' // transform: `translate(-${50}%, -${45}%)`,\n\n  };\n} // CHARTS\n\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n    durations = 500;\nvar delays2 = 80,\n    durations2 = 500;\nvar dailySalesChart = {\n  data: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 50,\n    // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n  animation: {\n    draw: function draw(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\nvar ShowUtilityCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShowUtilityCard, _React$Component);\n\n  function ShowUtilityCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowUtilityCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowUtilityCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0,\n      billDate: \"\",\n      cost: \"\",\n      open: false,\n      billData: {}\n    };\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.handleBillChange = function (event) {\n      return _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.findCompany = function (utility) {\n      var company = _this.props.companyData.find(function (company) {\n        return company.id === utility.company_id;\n      });\n\n      return company;\n    };\n\n    _this.getNextBillDate = function (bills) {\n      var date = bills[bills.length - 1].bill_date;\n      return _this.formatDate(date);\n    };\n\n    _this.getTimeToNextBill = function (date) {\n      var one_day = 1000 * 60 * 60 * 24;\n      var date1 = new Date(date);\n      var date2 = new Date();\n      var diff = date2.getTime() - date1.getTime();\n      var diffPositive = Math.abs(diff);\n      return Math.ceil(diffPositive / one_day);\n    };\n\n    _this.formatDate = function (date) {\n      // const formatDate = date\n      //   .split(\"T\")[0]\n      //   .split(\"-\")\n      //   .reverse()\n      //   .join(\"/\")\n      var test = new Date(date);\n      return test.toDateString();\n    };\n\n    _this.getBillCost = function (bill) {\n      return parseFloat(Math.round(bill * 100) / 100).toFixed(2);\n    };\n\n    _this.getNextBillCost = function (bills) {\n      return parseFloat(Math.round(bills[bills.length - 1].cost * 100) / 100).toFixed(2);\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleSubmitClick = function () {\n      var bill = {\n        bill_date: _this.state.billDate,\n        cost: _this.state.cost,\n        utility_id: _this.props.utilityData.id\n      };\n\n      _this.props.addBillLocal(bill);\n\n      API.addNewBill(bill).then(function (data) {\n        if (data.error) {\n          alert(\"something is wrong!\");\n        } else {\n          alert(\"Bill Added!\");\n        }\n      });\n    };\n\n    _this.handleButtonClick = function (prop) {\n      if (prop.color === \"success\") {\n        _this.setState({\n          billData: prop.bill\n        });\n\n        _this.handleOpen();\n      } else {\n        _this.props.deleteBillLocal(prop.bill);\n\n        API.deleteBill(prop.bill).then(function (data) {\n          if (data.error) {\n            alert(\"something is wrong!\");\n          } else {\n            alert(\"Bill Deleted!\");\n          }\n        });\n      }\n    };\n\n    _this.handleChangeIndex = function (index) {\n      _this.setState({\n        value: index\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ShowUtilityCard, [{\n    key: \"handleFirstDate\",\n    value: function handleFirstDate(date) {\n      this.setState({\n        billDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          utilityData = _this$props.utilityData,\n          userInfo = _this$props.userInfo;\n\n      var simpleButtons = function simpleButtons(bill) {\n        return [{\n          color: \"success\",\n          icon: Edit,\n          bill: bill\n        }, {\n          color: \"danger\",\n          icon: Close,\n          bill: bill\n        }].map(function (prop, key) {\n          return React.createElement(Button, {\n            style: {\n              padding: 5 + 'px'\n            },\n            color: prop.color,\n            simple: true,\n            className: classes.actionButton,\n            key: key,\n            onClick: function onClick() {\n              return _this2.handleButtonClick(prop);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 238\n            },\n            __self: this\n          }, React.createElement(prop.icon, {\n            className: classes.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }));\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"warning\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"date_range\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Your next bill date:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.getNextBillDate(utilityData.bills))), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Danger, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Warning, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"This is \", this.getTimeToNextBill(this.getNextBillDate(utilityData.bills)), \" days from now\"))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"content_copy\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Your next bill cost:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \"\\xA3\", this.getNextBillCost(utilityData.bills))), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Payment type: \", utilityData.payment_type))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: 'https://' + this.findCompany(utilityData).url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"link\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Open webpage for:\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, this.findCompany(utilityData).name)), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \"http\"), this.findCompany(utilityData).url)))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart\",\n        data: dailySalesChart.data,\n        type: \"Line\",\n        options: dailySalesChart.options,\n        listener: dailySalesChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Daily Sales\"), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.successText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(ArrowUpward, {\n        className: classes.upArrowCardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), \" 55%\"), \" \", \"increase in today sales.\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), \" updated 4 minutes ago\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(CustomTabs, {\n        headerColor: \"primary\",\n        tabs: [{\n          tabName: \"Past Bills\",\n          tabIcon: Check,\n          tabContent: React.createElement(Table, {\n            tableHeaderColor: \"warning\",\n            tableHead: [\"ID\", \"Cost\", \"Date\", \"Actions\"],\n            tableData: utilityData.bills.map(function (bill, index) {\n              return [index + 1, \"\\xA3\".concat(_this2.getBillCost(bill.cost)), _this2.formatDate(bill.bill_date), simpleButtons(bill)];\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 349\n            },\n            __self: this\n          })\n        }, {\n          tabName: \"New Bill\",\n          tabIcon: Add,\n          tabContent: React.createElement(GridContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365\n            },\n            __self: this\n          }, React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 366\n            },\n            __self: this\n          }, React.createElement(FormControl, {\n            fullWidth: true,\n            style: {\n              paddingTop: 10 + 'px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367\n            },\n            __self: this\n          }, React.createElement(Datetime, {\n            onChange: function onChange(date) {\n              return _this2.handleFirstDate(date);\n            },\n            timeFormat: false,\n            inputProps: {\n              placeholder: \"Payment Date\",\n              name: \"billDate\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 368\n            },\n            __self: this\n          }))), React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          }, React.createElement(CustomInput, {\n            labelText: \"Cost\",\n            id: \"cost\",\n            formControlProps: {\n              fullWidth: true\n            },\n            inputProps: {\n              name: \"cost\",\n              onChange: this.handleBillChange,\n              type: \"number\",\n              step: \"0.01\",\n              min: 0\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          })), React.createElement(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395\n            },\n            __self: this\n          }, React.createElement(Button, {\n            color: \"primary\",\n            onClick: this.handleSubmitClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 396\n            },\n            __self: this\n          }, \"Add New Bill\")))\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, React.createElement(InnerModal, {\n        billData: this.state.billData,\n        handleClose: this.handleClose,\n        updateBillLocal: function updateBillLocal(bill) {\n          return _this2.props.updateBillLocal(bill);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ShowUtilityCard;\n}(React.Component);\n\nShowUtilityCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(ShowUtilityCard);","map":{"version":3,"sources":["/Users/Matt/flatiron/mod-5/BillsHub-Frontend/src/views/Utilities/ShowUtilityCard.jsx"],"names":["React","PropTypes","ChartistGraph","withStyles","Icon","Store","Warning","DateRange","Person","Edit","Close","Check","Remove","Add","Typography","Modal","Update","ArrowUpward","AccessTime","Accessibility","BugReport","Code","Cloud","CustomInput","Datetime","FormControl","GridItem","GridContainer","Table","Tasks","CustomTabs","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","Button","API","InnerModal","bugs","website","server","dashboardStyle","getModalStyle","position","left","width","padding","Chartist","require","delays","durations","delays2","durations2","dailySalesChart","data","labels","series","options","lineSmooth","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","ShowUtilityCard","state","value","billDate","cost","open","billData","handleOpen","setState","handleClose","handleBillChange","event","target","name","findCompany","utility","company","props","companyData","find","id","company_id","getNextBillDate","bills","date","length","bill_date","formatDate","getTimeToNextBill","one_day","date1","Date","date2","diff","getTime","diffPositive","Math","abs","ceil","test","toDateString","getBillCost","bill","parseFloat","round","toFixed","getNextBillCost","handleChange","handleSubmitClick","utility_id","utilityData","addBillLocal","addNewBill","then","error","alert","handleButtonClick","prop","color","deleteBillLocal","deleteBill","handleChangeIndex","classes","userInfo","simpleButtons","icon","map","key","actionButton","cardCategory","cardTitle","stats","payment_type","url","successText","upArrowCardCategory","tabName","tabIcon","tabContent","paddingTop","handleFirstDate","placeholder","fullWidth","onChange","step","min","paper","updateBillLocal","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// react plugin for creating charts\nimport ChartistGraph from \"react-chartist\";\n// @material-ui/core\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Icon from \"@material-ui/core/Icon\";\n// @material-ui/icons\nimport Store from \"@material-ui/icons/Store\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport Person from \"@material-ui/icons/Person\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport Add from \"@material-ui/icons/Add\";\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\n\n\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Accessibility from \"@material-ui/icons/Accessibility\";\nimport BugReport from \"@material-ui/icons/BugReport\";\nimport Code from \"@material-ui/icons/Code\";\nimport Cloud from \"@material-ui/icons/Cloud\";\n// core components\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Datetime from \"react-datetime\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport Table from \"components/Table/Table.jsx\";\nimport Tasks from \"components/Tasks/Tasks.jsx\";\nimport CustomTabs from \"components/CustomTabs/CustomTabs.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport API from \"../../adapters/API\";\nimport InnerModal from './InnerModal'\n\nimport { bugs, website, server } from \"variables/general.jsx\";\n\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle.jsx\";\n\nfunction getModalStyle() {\n\n  return {\n    position: 'absolute',\n    // top: `${50}%`,\n    left: 'auto',\n    width: 400 + 'px',\n    padding: 200 + 'px',\n    // transform: `translate(-${50}%, -${45}%)`,\n  };\n}\n\n\n// CHARTS\n\nvar Chartist = require(\"chartist\");\n\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\nconst dailySalesChart = {\n  data: {\n    labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n  animation: {\n    draw: function(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n\n\nclass ShowUtilityCard extends React.Component {\n\n\n  state = {\n    value: 0,\n    billDate: \"\",\n    cost: \"\",\n    open: false,\n    billData: {}\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  handleBillChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  findCompany = (utility) => {\n    let company = this.props.companyData.find(company => company.id === utility.company_id)\n    return company\n  }\n\n  getNextBillDate = (bills) => {\n    let date = bills[bills.length - 1].bill_date\n    return this.formatDate(date)\n  } \n\n  getTimeToNextBill = (date) => {\n    let one_day=1000*60*60*24\n    let date1 = new Date(date)\n    let date2 = new Date()\n    let diff = date2.getTime() - date1.getTime()\n    let diffPositive = Math.abs(diff)\n    return Math.ceil(diffPositive/one_day)\n    }\n\n  formatDate = (date) => {\n    // const formatDate = date\n    //   .split(\"T\")[0]\n    //   .split(\"-\")\n    //   .reverse()\n    //   .join(\"/\")\n    var test = new Date(date)\n    return test.toDateString()\n   }\n\n  getBillCost = (bill) => parseFloat(Math.round(bill * 100) / 100).toFixed(2);\n\n  getNextBillCost = (bills) => parseFloat(Math.round((bills[bills.length - 1].cost) * 100) / 100).toFixed(2);\n  \n  \n  handleFirstDate(date) {\n    this.setState({ billDate: date });\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleSubmitClick = () => {\n    const bill = {\n      bill_date: this.state.billDate,\n      cost: this.state.cost,\n      utility_id: this.props.utilityData.id\n    }\n    this.props.addBillLocal(bill)\n    API.addNewBill(bill).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } else {\n        alert(\"Bill Added!\")\n      }\n    });\n  }\n\n\n  handleButtonClick = (prop) => {\n    if(prop.color === \"success\"){ \n      this.setState({\n        billData: prop.bill\n      })\n      this.handleOpen()\n  } else{\n    this.props.deleteBillLocal(prop.bill)\n    API.deleteBill(prop.bill).then(data => {\n      if (data.error) {\n        alert(\"something is wrong!\");\n      } else {\n        alert(\"Bill Deleted!\")\n      }\n    });\n  }\n}\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n\n  render() {\n    const { classes, utilityData, userInfo } = this.props;\n    const simpleButtons = (bill) => [\n      { color: \"success\", icon: Edit, bill: bill },\n      { color: \"danger\", icon: Close, bill: bill }\n    ].map((prop, key) => {\n      return (\n        <Button\n          style={{padding: 5 + 'px'}}\n          color={prop.color}\n          simple\n          className={classes.actionButton}\n          key={key}\n          onClick= {()=>this.handleButtonClick(prop)}\n        >\n          <prop.icon className={classes.icon} />\n        </Button>\n      );\n    });\n    return (\n     <>\n        <GridContainer>\n          <GridItem xs={12} sm={4} md={4} lg={4}>\n            <Card>\n              <CardHeader color=\"warning\" stats icon>\n                <CardIcon color=\"warning\">\n                  <Icon>date_range</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory} >Your next bill date:</p>\n                <h3 className={classes.cardTitle}>\n                {this.getNextBillDate(utilityData.bills)}\n                </h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                  <Danger>\n                    <Warning />\n                  </Danger>\n                  <p>\n                    This is {this.getTimeToNextBill(this.getNextBillDate(utilityData.bills))} days from now\n                  </p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={4} md={4} lg={4}>\n            <Card>\n              <CardHeader color=\"success\" stats icon>\n                <CardIcon color=\"success\">\n                <Icon>content_copy</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory}>Your next bill cost:</p>\n                <h3 className={classes.cardTitle}>£{this.getNextBillCost(utilityData.bills)}</h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                  <p>Payment type: {utilityData.payment_type}</p>\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          \n          <GridItem xs={12} sm={4} md={4} lg={4}>\n          <a href={'https://' + this.findCompany(utilityData).url} target=\"_blank\">\n            <Card>\n              <CardHeader color=\"danger\" stats icon>\n                <CardIcon color=\"danger\">\n                  <Icon>link</Icon>\n                </CardIcon>\n                <p className={classes.cardCategory}>Open webpage for:</p>\n                <h3 className={classes.cardTitle}>{this.findCompany(utilityData).name}</h3>\n              </CardHeader>\n              <CardFooter stats>\n                <div className={classes.stats}>\n                <Icon>http</Icon>\n                {this.findCompany(utilityData).url}\n                </div>\n              </CardFooter>\n            </Card>\n            </a>\n          </GridItem>\n        </GridContainer>\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card chart>\n              <CardHeader color=\"success\">\n                <ChartistGraph\n                  className=\"ct-chart\"\n                  data={dailySalesChart.data}\n                  type=\"Line\"\n                  options={dailySalesChart.options}\n                  listener={dailySalesChart.animation}\n                />\n              </CardHeader>\n              <CardBody>\n                <h4 className={classes.cardTitle}>Daily Sales</h4>\n                <p className={classes.cardCategory}>\n                  <span className={classes.successText}>\n                    <ArrowUpward className={classes.upArrowCardCategory} /> 55%\n                  </span>{\" \"}\n                  increase in today sales.\n                </p>\n              </CardBody>\n              <CardFooter chart>\n                <div className={classes.stats}>\n                  <AccessTime /> updated 4 minutes ago\n                </div>\n              </CardFooter>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <CustomTabs\n              headerColor=\"primary\"\n              tabs={[\n                {\n                  tabName: \"Past Bills\",\n                  tabIcon: Check,\n                  tabContent: (\n                    <Table\n                  tableHeaderColor=\"warning\"\n                  tableHead={[\"ID\", \"Cost\", \"Date\", \"Actions\"]}\n                  tableData={\n                    utilityData.bills.map((bill, index) => \n                       [index+1, `£${this.getBillCost(bill.cost)}`, this.formatDate(bill.bill_date), simpleButtons(bill)]\n                    )\n                  }\n                />\n                \n                  )\n                },\n                {\n                  tabName: \"New Bill\",\n                  tabIcon: Add,\n                  tabContent: (\n                    <GridContainer>\n                    <GridItem xs={12} sm={12} md={6} >\n                    <FormControl fullWidth style={{paddingTop: 10 +'px'}}>\n                      <Datetime\n                        onChange={date => this.handleFirstDate(date)}\n                        timeFormat={false}\n                        inputProps={{\n                          placeholder: \"Payment Date\",\n                          name: \"billDate\",\n                          \n                        }}\n                      />\n                    </FormControl>\n                  </GridItem>\n                  <GridItem xs={12} sm={12} md={6}>\n                  <CustomInput\n                    labelText=\"Cost\"\n                    id=\"cost\"\n                    formControlProps={{\n                      fullWidth: true\n                    }}\n                    inputProps={{\n                      name: \"cost\",\n                      onChange: this.handleBillChange,\n                      type: \"number\",\n                      step: \"0.01\",\n                      min: 0\n                    }}\n                  />\n                </GridItem>\n                <GridItem xs={12} sm={12} md={6} >\n                  <Button color=\"primary\" onClick={this.handleSubmitClick}>\n                    Add New Bill\n                  </Button>\n                  </GridItem>\n                </GridContainer>\n                  )\n                }\n                \n              ]}\n            />\n          </GridItem>\n        </GridContainer>\n        <GridContainer>\n        <GridItem xs={12} sm={12} md={6} >\n        <Modal\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <InnerModal billData = {this.state.billData} handleClose={this.handleClose} updateBillLocal = {(bill)=>this.props.updateBillLocal(bill)}/>\n\n          </div>\n        </Modal>\n        </GridItem>\n        </GridContainer>\n     </>\n    );\n  }\n}\n\nShowUtilityCard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(ShowUtilityCard);\n"]},"metadata":{},"sourceType":"module"}